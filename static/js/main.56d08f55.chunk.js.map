{"version":3,"sources":["redux/user/userReducer.js","redux/user/userTypes.js","redux/board/boardReducer.js","redux/board/boardTypes.js","redux/booking/bookingReducer.js","redux/booking/bookingTypes.js","redux/userBookings/userBookingsReducer.js","redux/userBookings/userBookingsTypes.js","redux/toast/toastReducer.js","redux/toast/toastTypes.js","redux/admin/adminReducer.js","redux/admin/adminTypes.js","redux/rootReducer.js","redux/store.js","components/NavBar/utils.js","components/NavBar/Burger/Burger.js","components/NavBar/NavBar.js","redux/user/userActions.js","components/Route/Route.js","utils/slots.js","redux/admin/adminActions.js","services/Date.js","custom-hooks/index.js","services/validation.js","services/Axios.js","services/Admin.js","redux/toast/toastActions.js","redux/board/boardActions.js","services/Booking.js","redux/board/boardUtils.js","redux/admin/adminUtils.js","components/adminComponents/DateInfo/DateInfo.js","components/adminComponents/withBookingModal/withBookingModal.js","components/adminComponents/AdminSlots/Slot/Slot.js","components/adminComponents/withDetailsModal/withDetailsModal.js","components/Toast/Toast.js","components/adminComponents/AdminSlots/AdminSlots.js","redux/booking/bookingActions.js","components/Datepicker/Datepicker.js","components/Logout/Logout.js","pages/Admin/Bookings/Bookings.js","components/IconProvider/IconProvider.js","components/BackArrow/BackArrow.js","components/Error/Error.js","components/FormWrapper/FormWrapper.js","pages/Admin/Password/Password.js","components/Booking/Error/Error.js","components/Loader/Loader.js","HOC/withError/withError.js","HOC/withConfirm/withConfirm.js","redux/userBookings/userBookingsActions.js","redux/userBookings/userBookingsUtils.js","components/Booking/Slot/Slot.js","components/Booking/Slots/Slots.js","redux/booking/bookingUtils.js","components/Booking/BookButton/BookButton.js","components/Booking/Booking.js","pages/BookingBoard/BookingBoard.js","components/Footer/utils.js","components/Footer/Footer.js","components/Front/Front.js","components/Instruction/utils.js","components/Tile/Tile.js","components/Instruction/Instruction.js","pages/Home/Home.js","services/User.js","pages/SignIn/SignIn.js","redux/user/userUtils.js","pages/SignUp/SignUp.js","components/Delete/Delete.js","pages/User/User.js","components/UserTable/Header/Header.js","components/UserTable/Information/Information.js","components/UserTable/Row/Row.js","components/UserTable/UserTable.js","pages/UserBookings/UserBookings.js","pages/Admin/UserDetails/UserDetails.js","components/adminComponents/UsersTable/Header/Header.js","components/adminComponents/UsersTable/Information/Information.js","components/adminComponents/UsersTable/Row/Row.js","components/adminComponents/UsersTable/UsersTable.js","components/adminComponents/UserSearch/UserSearch.js","components/Pagination/Pagination.js","components/Pagination/utils.js","pages/Admin/UsersSearch/UsersSearch.js","components/Routes/Routes.js","index.js","App.js"],"names":["initialState","error","loading","logged","id","isAdmin","name","token","user","userReducer","state","action","type","payload","admin","date","takenSlots","selectedSlot","boardReducer","slotNumber","bookedSlot","bookingReducer","userBookings","userBookingsReducer","toastActive","undefined","toastReducer","choosedSlot","details","users","adminReducer","rootReducer","combineReducers","board","booking","userBookingReducer","toast","store","createStore","composeWithDevTools","applyMiddleware","thunk","loggedNav","unloggedNav","adminNav","Burger","active","setActive","className","onClick","NavBar","useState","mobile","setMobile","useSelector","useEffect","window","innerWidth","data","map","text","link","key","activeClassName","exact","to","loginSuccess","loginFailure","changePasswordFailure","Route","Component","component","secured","path","rest","dispatch","useDispatch","render","props","slots","number","hours","lastBooking","bookSlotFailure","deleteSlotFailure","getUsersFailure","getUsersSuccess","checkAvailability","a","async","available","today","Date","setHours","split","day","month","year","bookDate","getHours","standarizeDate","getUTCDate","getUTCMonth","getUTCFullYear","sortByDates","bookings","sort","aBooking","bBooking","aDay","aMonth","aYear","bDay","bMonth","bYear","sortedBookings","removeOldDates","filter","useDateCheck","taken","selected","unavailable","setUnavailability","style","setStyle","avaiability","check","registrationSchema","Yup","shape","Nickname","max","required","Email","email","Password","min","Repassword","when","is","val","length","then","oneOf","loginSchema","nicknameSchema","changePasswordSchema","newPassword","newPasswordConfirm","adminChangePasswordSchema","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","Authorization","localStorage","Promise","reject","bookSlot","post","changePassword","deleteSlot","delete","fetchDetails","get","fetchUsers","params","fetchUser","fetchUserBookings","handleBlock","isBlocked","enableToast","setDate","getSlotsFailure","getSlotsSuccess","fetchBookings","fetchDate","standarized","actions","catch","err","Error","response","message","deleteSelectedSlot","slotId","userId","services","getUserBookings","statusText","getUsers","sortedResponse","DateInfo","time","values","slotWithModals","compose","WrappedComponent","isOpen","openBooking","Modal","setAppElement","contentLabel","overlayClassName","initialValues","validationSchema","onSubmit","msg","bookSelectedSlot","htmlFor","openDetails","withModals","Toast","toastType","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","onOpen","onClose","AdminSlots","takenSlot","_id","bookingFailure","Datepicker","startDate","setStartDate","maxDate","addDays","minDate","onChange","Logout","Bookings","IconProvider","icon","Provider","value","BackArrow","history","useHistory","goBack","errorMsg","FormWrapper","title","useParams","resetForm","changeUserPassword","Object","keys","Loader","size","color","withError","withConfirm","open","setOpen","confirm","setConfirm","deleteUserBookingFailure","getUsersBookings","deleteUsersBooking","requestFromBoardSlot","slotWithConfirm","Slots","loggedUser","slot","BookButton","bookingWithError","BookingBoard","footerData","Footer","textArray","Front","tiles","Tile","animate","arrow","Instruction","setAnimate","scroll","addEventListener","scrollY","removeEventListener","Home","signIn","password","signUp","passwordChange","SignIn","setItem","errors","SignUp","setSubmitting","registerUser","deleteWithConfirm","User","Header","Information","colSpan","rowWithConfirm","userTableWithError","index","UserBookings","UserDetails","getUser","slice","Row","block","setBlock","handleBlockStatus","alert","UsersTable","UserSearch","placeholder","Pagination","currentPage","setCurrentPage","pages","array","indexDown","indexUp","getPages","Array","UsersSearch","setPages","usersToDisplay","setUsersToDisplay","Math","ceil","companieSlice","Routes","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.56d08f55.chunk.js","sourcesContent":["import * as types from \"./userTypes\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  logged: false,\r\n  id: null,\r\n  isAdmin: false,\r\n  name: null,\r\n  token: null,\r\n  user: {},\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.LOGIN:\r\n      return { ...state, loading: true };\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        id: payload.id,\r\n        name: payload.name,\r\n        isAdmin: payload.admin,\r\n        loading: false,\r\n        logged: true\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    case types.CHANGE_PASSWORD:\r\n      return { ...state, loading: true };\r\n    case types.CHANGE_PASSWORD_SUCCESS:\r\n      return { ...state, loading: false, error: null };\r\n    case types.CHANGE_PASSWORD_FAILURE:\r\n      return { ...state, loading: false, error: payload.error };\r\n    case types.LOGOUT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        user: {},\r\n        logged: false,\r\n        loading: false,\r\n        id: null,\r\n        name: null,\r\n        token: null,\r\n        isAdmin: false\r\n      };\r\n\r\n    case types.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","export const LOGIN = \"LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\r\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\r\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as types from \"./boardTypes\";\r\n\r\nconst initialState = {\r\n  date: null,\r\n  error: null,\r\n  loading: false,\r\n  takenSlots: [],\r\n  selectedSlot: {},\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.SET_DATE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        date: payload.date,\r\n      };\r\n    case types.GET_SLOTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n        takenSlots: null,\r\n      };\r\n    case types.GET_SLOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        takenSlots: payload.takenSlots,\r\n      };\r\n    case types.SELECT_SLOT:\r\n      return {\r\n        ...state,\r\n        selectedSlot: payload.slotNumber,\r\n      };\r\n    case types.RESET_BOOKINGS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        takenSlots: [],\r\n        selectedSlot: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","export const SET_DATE = \"SET_DATE\";\r\nexport const GET_SLOTS_FAILURE = \"GET_SLOTS_FAILURE\";\r\nexport const GET_SLOTS_SUCCESS = \"GET_SLOTS_SUCCESS\";\r\nexport const RESET_BOOKINGS = \"RESET_BOOKINGS\";\r\nexport const SELECT_SLOT = \"SELECT_SLOT\";\r\n","import * as types from \"./bookingTypes\";\r\n\r\nconst initialState = {\r\n  bookedSlot: null,\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case types.START_BOOKING:\r\n      return { ...state, loading: true };\r\n    case types.BOOKING_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    case types.BOOKING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        bookedSlot: payload.bookedSlot,\r\n        loading: false,\r\n      };\r\n    case types.RESET_BOOKING:\r\n      return { ...state, bookedSlot: null, error: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","export const START_BOOKING = \"START_BOOKING\";\r\nexport const BOOKING_FAILURE = \"BOOKING_FAILURE\";\r\nexport const BOOKING_SUCCESS = \"BOOKING_SUCCESS\";\r\nexport const RESET_BOOKING = \"RESET_BOOKING\";\r\n","import * as types from \"./userBookingsTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: false,\r\n  userBookings: []\r\n};\r\n\r\nconst userBookingsReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case types.FETCH_BOOKINGS:\r\n      return { ...state, error: false, loading: true, userBookings: [] };\r\n    case types.FETCH_BOOKINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        userBookings: payload.userBookings\r\n      };\r\n    case types.FETCH_BOOKINGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n        userBookings: []\r\n      };\r\n    case types.DELETE_BOOKING:\r\n      return { ...state, error: false, loading: true };\r\n    case types.DELETE_BOOKING_SUCCESS:\r\n      return { ...state, error: false, loading: false };\r\n    case types.DELETE_BOOKING_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userBookingsReducer;\r\n","export const FETCH_BOOKINGS = \"FETCH_BOOKINGS\";\r\nexport const FETCH_BOOKINGS_SUCCESS = \"FETCH_BOOKINGS_SUCCESS\";\r\nexport const FETCH_BOOKINGS_FAILURE = \"FETCH_BOOKINGS_FAILURE\";\r\nexport const DELETE_BOOKING = \"DELETE_BOOKING\";\r\nexport const DELETE_BOOKING_SUCCESS = \"DELETE_BOOKING_SUCCESS\";\r\nexport const DELETE_BOOKING_FAILURE = \"DELETE_BOOKING_FAILURE\";\r\n","import * as types from \"./toastTypes\";\r\n\r\nconst initialState = {\r\n  toastActive: false,\r\n  type: undefined\r\n};\r\n\r\nconst toastReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.ENABLE_TOAST:\r\n      return { ...state, type: payload.type };\r\n    case types.ACTIVE_TOAST:\r\n      return { ...state, toastActive: true };\r\n    case types.DISABLE_TOAST:\r\n      return { toastActive: false, type: undefined };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toastReducer;\r\n","export const ENABLE_TOAST = \"ENABLE_TOAST\";\r\nexport const DISABLE_TOAST = \"DISABLE_TOAST\";\r\nexport const ACTIVE_TOAST = \"ACTIVE_TOAST\";\r\n","import * as types from \"./adminTypes\";\r\n\r\nconst initialState = {\r\n  choosedSlot: {},\r\n  error: null,\r\n  details: {},\r\n  loading: false,\r\n  user: [],\r\n  userBookings: [],\r\n  users: [],\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.BOOK_SLOT_START ||\r\n      types.DELETE_SLOT_START ||\r\n      types.GET_DETAILS_START ||\r\n      types.GET_USERS_START ||\r\n      types.GET_USER_START ||\r\n      types.GET_BOOKINGS_START ||\r\n      types.CHANGE_PASSWORD_START ||\r\n      types.HANDLE_BLOCK_START:\r\n      return { ...state, loading: true, error: null };\r\n    case types.BOOK_SLOT_FAILURE ||\r\n      types.DELETE_SLOT_FAILURE ||\r\n      types.GET_DETAILS_FAILURE ||\r\n      types.GET_USERS_FAILURE ||\r\n      types.GET_USER_FAILURE ||\r\n      types.GET_BOOKINGS_FAILURE ||\r\n      types.CHANGE_PASSWORD_FAILURE ||\r\n      types.HANDLE_BLOCK_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n      };\r\n    case types.BOOK_SLOT_SUCCESS ||\r\n      types.DELETE_SLOT_SUCCESS ||\r\n      types.CHANGE_PASSWORD_SUCCESS ||\r\n      types.HANDLE_BLOCK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        details: { ...payload },\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload.users,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_BOOKINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userBookings: payload.userBookings,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.CHOOSE_SLOT:\r\n      return { ...state, choosedSlot: { ...payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","export const BOOK_SLOT_START = \"BOOK_SLOT_START\";\r\nexport const BOOK_SLOT_FAILURE = \"BOOK_SLOT_FAILURE\";\r\nexport const BOOK_SLOT_SUCCESS = \"BOOK_SLOT_SUCCESS\";\r\n\r\nexport const CHOOSE_SLOT = \"CHOOSE_SLOT\";\r\n\r\nexport const CHANGE_PASSWORD_START = \"CHANGE_PASSWORD_START\";\r\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\";\r\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\r\n\r\nexport const DELETE_SLOT_START = \"DELETE_SLOT_START\";\r\nexport const DELETE_SLOT_FAILURE = \"DELETE_SLOT_FAILURE\";\r\nexport const DELETE_SLOT_SUCCESS = \"DELETE_SLOT_SUCCESS\";\r\n\r\nexport const GET_DETAILS_START = \"GET_DETAILS_START\";\r\nexport const GET_DETAILS_FAILURE = \"GET_DETAILS_FAILURE\";\r\nexport const GET_DETAILS_SUCCESS = \"GET_DETAILS_SUCCESS\";\r\n\r\nexport const GET_USERS_START = \"GET_USERS_START\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\n\r\nexport const GET_USER_START = \"GET_USER_START\";\r\nexport const GET_USER_FAILURE = \"GET_USER_FAILURE\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\n\r\nexport const GET_BOOKINGS_START = \"GET_BOOKINGS_START\";\r\nexport const GET_BOOKINGS_FAILURE = \"GET_BOOKINGS_FAILURE\";\r\nexport const GET_BOOKINGS_SUCCESS = \" GET_BOOKINGS_SUCCESS\";\r\n\r\nexport const HANDLE_BLOCK_START = \"HANDLE_BLOCK_START\";\r\nexport const HANDLE_BLOCK_FAILURE = \"HANDLE_BLOCK_FAILURE\";\r\nexport const HANDLE_BLOCK_SUCCESS = \"HANDLE_BLOCK_SUCCESS\";\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./user/userReducer\";\r\nimport boardReducer from \"./board/boardReducer\";\r\nimport bookingReducer from \"./booking/bookingReducer\";\r\nimport userBookingReducer from \"./userBookings/userBookingsReducer\";\r\nimport toastReducer from \"./toast/toastReducer\";\r\nimport adminReducer from \"./admin/adminReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  board: boardReducer,\r\n  booking: bookingReducer,\r\n  userBookings: userBookingReducer,\r\n  toast: toastReducer,\r\n  admin: adminReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export const loggedNav = [\r\n  [\"Account\", \"/user\"],\r\n  [\"Book\", \"/booking-board\"],\r\n  [\"My Bookings\", \"/user-bookings\"],\r\n];\r\nexport const unloggedNav = [\r\n  [\"Home\", \"/\"],\r\n  [\"Sign In\", \"/sign-in\"],\r\n  [\"Sign Up\", \"/sign-up\"],\r\n];\r\nexport const adminNav = [\r\n  [\"Bookings\", \"/admin\"],\r\n  [\"Search\", \"/admin/search\"],\r\n];\r\n","import React from \"react\";\r\n\r\nexport const Burger = ({ active, setActive }) => (\r\n  <div\r\n    className={`mobile burger ${active ? \"active\" : \"\"}`}\r\n    onClick={() => setActive(!active)}\r\n  >\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport * as data from \"./utils\";\r\nimport { Burger } from \"./Burger\";\r\n\r\nexport const NavBar = () => {\r\n  const [mobile, setMobile] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  const { isAdmin, logged } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    return window.innerWidth < 600 ? setMobile(true) : null;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      {mobile && <Burger active={active} setActive={setActive} />}\r\n      <ul\r\n        className={`navigation__links ${mobile ? \"mobile\" : \"\"} ${\r\n          active ? \"active\" : \"\"\r\n        } \r\n        `}\r\n      >\r\n        {(!logged\r\n          ? data.unloggedNav\r\n          : isAdmin\r\n          ? data.adminNav\r\n          : data.loggedNav\r\n        ).map(([text, link]) => (\r\n          <NavLink\r\n            onClick={() => setActive(false)}\r\n            key={text}\r\n            activeClassName=\"selected\"\r\n            exact\r\n            to={link}\r\n          >\r\n            <li>{text}</li>\r\n          </NavLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import * as types from \"./userTypes\";\r\n\r\nexport const login = () => ({\r\n  type: types.LOGIN,\r\n});\r\n\r\nexport const loginSuccess = ({ token, id, name, admin }) => ({\r\n  type: types.LOGIN_SUCCESS,\r\n  payload: { token, id, name, admin },\r\n});\r\n\r\nexport const loginFailure = (error) => ({\r\n  type: types.LOGIN_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const changePassword = () => ({\r\n  type: types.CHANGE_PASSWORD,\r\n});\r\n\r\nexport const changePasswordSuccess = () => ({\r\n  type: types.CHANGE_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const changePasswordFailure = (error) => ({\r\n  type: types.CHANGE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\nexport const logout = () => ({\r\n  type: types.LOGOUT,\r\n});\r\n\r\nexport const clearErrors = () => ({\r\n  type: types.CLEAR_ERRORS,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Route as ReactRouter, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { clearErrors } from \"redux/user/userActions\";\r\n\r\nexport const Route = ({ component: Component, secured, path, ...rest }) => {\r\n  const { error, isAdmin, logged } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (error) dispatch(clearErrors());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [path]);\r\n\r\n  if (logged && !isAdmin && (path === \"/sign-in\" || path === \"/sign-up\")) {\r\n    return <Redirect to=\"/booking-board\" />;\r\n  } else if (isAdmin && logged && path === \"/sign-in\") {\r\n    return <Redirect to=\"/admin\" />;\r\n  } else if (!logged && secured) return <Redirect to=\"/sign-in\" />;\r\n\r\n  return <ReactRouter {...rest} render={(props) => <Component {...props} />} />;\r\n};\r\n","export const slots = [\r\n  { number: 1, hours: \"6.00-8.00\", lastBooking: 7 },\r\n  { number: 2, hours: \"8.00-10.00\", lastBooking: 9 },\r\n  { number: 3, hours: \"10.00-12.00\", lastBooking: 11 },\r\n  { number: 4, hours: \"12.00-14.00\", lastBooking: 13 },\r\n  { number: 5, hours: \"14.00-16.00\", lastBooking: 15 },\r\n  { number: 6, hours: \"16.00-18.00\", lastBooking: 17 },\r\n  { number: 7, hours: \"18.00-20.00\", lastBooking: 19 },\r\n  { number: 8, hours: \"20.00-22.00\", lastBooking: 21 }\r\n];\r\n","import * as types from \"./adminTypes\";\r\n\r\nexport const chooseSlot = (choosedSlot) => ({\r\n  type: types.CHOOSE_SLOT,\r\n  payload: choosedSlot,\r\n});\r\n\r\nexport const startChangePassword = () => ({\r\n  type: types.CHANGE_PASSWORD_START,\r\n});\r\n\r\nexport const changePasswordFailure = (error) => ({\r\n  type: types.CHANGE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const changePasswordSuccess = () => ({\r\n  type: types.CHANGE_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const startBookSlot = () => ({\r\n  type: types.BOOK_SLOT_START,\r\n});\r\n\r\nexport const bookSlotFailure = (error) => ({\r\n  type: types.BOOK_SLOT_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const bookSlotSuccess = () => ({\r\n  type: types.BOOK_SLOT_SUCCESS,\r\n});\r\n\r\nexport const startDeleteSlot = () => ({\r\n  type: types.DELETE_SLOT_START,\r\n});\r\n\r\nexport const deleteSlotFailure = (error) => ({\r\n  type: types.DELETE_SLOT_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteSlotSuccess = () => ({\r\n  type: types.DELETE_SLOT_SUCCESS,\r\n});\r\n\r\nexport const startGetDetails = () => ({\r\n  type: types.GET_DETAILS_START,\r\n});\r\n\r\nexport const getDetailsFailure = (error) => ({\r\n  type: types.GET_DETAILS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getDetailsSuccess = (details) => ({\r\n  type: types.GET_DETAILS_SUCCESS,\r\n  payload: { ...details },\r\n});\r\n\r\nexport const startGetUsers = () => ({\r\n  type: types.GET_USERS_START,\r\n});\r\n\r\nexport const getUsersFailure = (error) => ({\r\n  type: types.GET_USERS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUsersSuccess = (users) => ({\r\n  type: types.GET_USERS_SUCCESS,\r\n  payload: { users },\r\n});\r\n\r\nexport const startGetUser = () => ({\r\n  type: types.GET_USER_START,\r\n});\r\n\r\nexport const getUserFailure = (error) => ({\r\n  type: types.GET_USER_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUserSuccess = (user) => ({\r\n  type: types.GET_USER_SUCCESS,\r\n  payload: { user },\r\n});\r\n\r\nexport const startGetUserBookings = () => ({\r\n  type: types.GET_BOOKINGS_START,\r\n});\r\n\r\nexport const getUserBookingsFailure = (error) => ({\r\n  type: types.GET_BOOKINGS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUserBookingsSuccess = (userBookings) => ({\r\n  type: types.GET_BOOKINGS_SUCCESS,\r\n  payload: { userBookings },\r\n});\r\n\r\nexport const startHandleBlock = () => ({\r\n  type: types.HANDLE_BLOCK_START,\r\n});\r\n\r\nexport const handleBlockSuccess = (error) => ({\r\n  type: types.HANDLE_BLOCK_SUCCESS,\r\n  payload: { error },\r\n});\r\n\r\nexport const handleBlockFailure = (userBookings) => ({\r\n  type: types.HANDLE_BLOCK_FAILURE,\r\n});\r\n","export const checkAvailability = async (date, lastBooking) => {\r\n  let available = true;\r\n  if (date) {\r\n    const today = new Date().setHours(0, 0, 0, 0);\r\n    const [day, month, year] = date.split(\"-\");\r\n    const bookDate = new Date(year, month - 1, day).setHours(0, 0, 0, 0);\r\n    if (today === bookDate && lastBooking <= new Date().getHours())\r\n      available = false;\r\n  }\r\n  return available;\r\n};\r\n\r\nexport const standarizeDate = (date) =>\r\n  `${date.getUTCDate()}-${date.getUTCMonth() + 1}-${date.getUTCFullYear()}`;\r\n\r\nexport const sortByDates = async (bookings) => {\r\n  const sortedBookings = await bookings.sort((aBooking, bBooking) => {\r\n    const [aDay, aMonth, aYear] = aBooking.date.split(\"-\");\r\n    const [bDay, bMonth, bYear] = bBooking.date.split(\"-\");\r\n    return (\r\n      new Date(bYear, bMonth - 1, bDay) - new Date(aYear, aMonth - 1, aDay)\r\n    );\r\n  });\r\n  return await removeOldDates(sortedBookings);\r\n};\r\n\r\nconst removeOldDates = async (bookings) =>\r\n  await bookings.filter((booking) => {\r\n    const [day, month, year] = booking.date.split(\"-\");\r\n    return new Date(year, month - 1, day) >= new Date().setHours(0, 0, 0, 0);\r\n  });\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { checkAvailability } from \"services/Date\";\r\n\r\nexport const useDateCheck = (taken, lastBooking, selected = false, id) => {\r\n  const [unavailable, setUnavailability] = useState(taken);\r\n  const [style, setStyle] = useState(\"\");\r\n  const date = useSelector((state) => state.board.date);\r\n\r\n  useEffect(() => {\r\n    async function check() {\r\n      if (!taken) {\r\n        let avaiability = await checkAvailability(date, lastBooking);\r\n        setUnavailability(!avaiability);\r\n      }\r\n    }\r\n    check();\r\n  }, [date, lastBooking, taken]);\r\n\r\n  useEffect(() => {\r\n    unavailable\r\n      ? setStyle(\"--taken\")\r\n      : selected\r\n      ? setStyle(\"--available--selected\")\r\n      : id\r\n      ? setStyle(\"--available user\")\r\n      : setStyle(\"--available\");\r\n  }, [id, selected, unavailable]);\r\n\r\n  return [unavailable, style];\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const registrationSchema = Yup.object().shape({\r\n  Nickname: Yup.string()\r\n    .max(15, \"Must be 15 characters or less\")\r\n    .required(\"Required\"),\r\n  Email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n  Password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  Repassword: Yup.string().when(\"Password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"Password\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const loginSchema = Yup.object().shape({\r\n  Nickname: Yup.string().required(\"Required\"),\r\n  Password: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const nicknameSchema = Yup.object().shape({\r\n  Nickname: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const changePasswordSchema = Yup.object().shape({\r\n  Password: Yup.string().required(\"Required\"),\r\n  newPassword: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  newPasswordConfirm: Yup.string().when(\"newPassword\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const adminChangePasswordSchema = Yup.object().shape({\r\n  newPassword: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  newPasswordConfirm: Yup.string().when(\"newPassword\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: \"https://laundry-dorn.herokuapp.com/\",\r\n  timeout: 1000,\r\n  headers: { \"content-type\": \"application/json\" },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n    if (!config.headers.Authorization) {\r\n      const token = await localStorage.token;\r\n      if (token) {\r\n        config.headers.Authorization = token;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const bookSlot = async (data) =>\r\n  await axiosInstance.post(\"/admin/book\", data);\r\n\r\nexport const changePassword = async (id, newPassword) =>\r\n  await axiosInstance.post(\"admin/user-password\", {\r\n    id,\r\n    newPassword,\r\n  });\r\n\r\nexport const deleteSlot = async (id) =>\r\n  await axiosInstance.delete(`/admin/delete/${id}`);\r\n\r\nexport const fetchDetails = async (id) =>\r\n  await axiosInstance.get(`/admin/booking/${id}`);\r\n\r\nexport const fetchUsers = async (name) =>\r\n  await axiosInstance.get(\"/admin/users\", { params: { name } });\r\n\r\nexport const fetchUser = async (id) =>\r\n  await axiosInstance.get(\"/admin/user\", { params: { id } });\r\n\r\nexport const fetchUserBookings = async (id) =>\r\n  await axiosInstance.get(\"/admin/user-bookings\", { params: { id } });\r\n\r\nexport const handleBlock = async (id, isBlocked) =>\r\n  await axiosInstance.post(`admin/user-${isBlocked ? \"unblock\" : \"block\"}`, {\r\n    id,\r\n  });\r\n","import * as types from \"./toastTypes\";\r\n\r\nexport const enableToast = (type) => ({\r\n  type: types.ENABLE_TOAST,\r\n  payload: { type },\r\n});\r\n\r\nexport const activateToast = () => ({\r\n  type: types.ACTIVE_TOAST,\r\n});\r\n\r\nexport const resetToast = () => ({\r\n  type: types.DISABLE_TOAST,\r\n});\r\n","import * as types from \"./boardTypes\";\r\n\r\nexport const setDate = (date) => ({\r\n  type: types.SET_DATE,\r\n  payload: { date },\r\n});\r\n\r\nexport const getSlotsFailure = (error) => ({\r\n  type: types.GET_SLOTS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getSlotsSuccess = (takenSlots) => ({\r\n  type: types.GET_SLOTS_SUCCESS,\r\n  payload: { takenSlots },\r\n});\r\n\r\nexport const resetBookings = () => ({\r\n  type: types.RESET_BOOKINGS,\r\n});\r\n\r\nexport const selectSlot = (slotNumber) => ({\r\n  type: types.SELECT_SLOT,\r\n  payload: { slotNumber },\r\n});\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const bookSlot = async (date, { number, hours }) =>\r\n  await axiosInstance.post(\"/booking/\", { date, number, hours });\r\n\r\nexport const deleteSlot = async (date, id) =>\r\n  await axiosInstance.delete(`/booking/${date}/${id}`);\r\n\r\nexport const fetchBookings = async (date) =>\r\n  axiosInstance.get(`/booking/${date}`);\r\n\r\nexport const fetchUserBookings = async () =>\r\n  await axiosInstance.get(\"/booking/user-bookings\");\r\n","import * as actions from \"./boardActions\";\r\n\r\nimport { standarizeDate } from \"services/Date\";\r\nimport { fetchBookings } from \"services/Booking\";\r\n\r\nexport const fetchDate = (date, standarized = false) => async (dispatch) => {\r\n  try {\r\n    if (!standarized) date = await standarizeDate(date);\r\n    await dispatch(actions.setDate(date));\r\n    const response = await fetchBookings(date).catch((err) => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getSlotsSuccess(response.data.slots));\r\n  } catch (error) {\r\n    dispatch(actions.getSlotsFailure(error.message));\r\n  }\r\n};\r\n","import * as actions from \"./adminActions\";\r\n\r\nimport * as services from \"services/Admin\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\nimport { fetchDate } from \"../board/boardUtils\";\r\nimport { sortByDates } from \"services/Date\";\r\n\r\nexport const bookSelectedSlot = (name, date, number, hours) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.startBookSlot());\r\n    const response = await services.bookSlot({ name, date, number, hours });\r\n    dispatch(actions.bookSlotSuccess(response.data));\r\n    dispatch(enableToast(\"BOOK\"));\r\n    dispatch(fetchDate(date, true));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.bookSlotFailure(error.response.data.msg));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    } else {\r\n      dispatch(actions.bookSlotFailure(\"Internal server error\"));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeUserPassword = (id, newPassword) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.startChangePassword());\r\n    await services.changePassword(id, newPassword);\r\n    dispatch(actions.changePasswordSuccess());\r\n    dispatch(enableToast(\"CHANGE\"));\r\n  } catch (error) {\r\n    dispatch(actions.changePasswordFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteSelectedSlot = (date, slotId, isAdmin, userId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.startDeleteSlot());\r\n    await services.deleteSlot(slotId);\r\n    dispatch(actions.deleteSlotSuccess());\r\n    dispatch(enableToast(\"DELETE\"));\r\n    return isAdmin\r\n      ? dispatch(getUserBookings(userId))\r\n      : dispatch(fetchDate(date, true));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteSlotFailure(error.response.statusText));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    } else {\r\n      dispatch(actions.deleteSlotFailure(\"Internal server error\"));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getDetails = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetDetails());\r\n    const response = await services.fetchDetails(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getDetailsSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getDetailsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUsers = (name = \"\") => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUsers());\r\n    const response = await services.fetchUsers(name).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getUsersSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getUsersFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUser());\r\n    const response = await services.fetchUser(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUserBookings = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUserBookings());\r\n    const response = await services.fetchUserBookings(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    const sortedResponse = await sortByDates(response.data);\r\n    dispatch(actions.getUserBookingsSuccess(sortedResponse));\r\n  } catch (error) {\r\n    dispatch(actions.getUserBookingsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const handleBlockStatus = (id, isBlocked) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startHandleBlock());\r\n    await services.handleBlock(id, isBlocked);\r\n    await dispatch(actions.handleBlockSuccess());\r\n  } catch (error) {\r\n    dispatch(actions.handleBlockFailure(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DateInfo = ({ date, text, time }) => (\r\n  <>\r\n    <h2>{text}</h2>\r\n    <div className=\"modal__basics\">\r\n      <div className=\"modal__date\">\r\n        <p>\r\n          <span>Date:</span> {date}\r\n        </p>\r\n      </div>\r\n      <div className=\"modal__time\">\r\n        <p>\r\n          <span>Time:</span> {time}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { nicknameSchema } from \"services/validation\";\r\nimport { bookSelectedSlot } from \"redux/admin/adminUtils\";\r\nimport { DateInfo } from \"../DateInfo\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n};\r\n\r\nexport const withBookingModal = (WrappedComponent) => ({ ...props }) => {\r\n  const [isOpen, openBooking] = useState(false);\r\n  const date = useSelector((store) => store.board.date);\r\n  const { hours, number } = useSelector((store) => store.admin.choosedSlot);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    Modal.setAppElement(\"#root\");\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal\r\n          isOpen={isOpen}\r\n          contentLabel=\"Booking\"\r\n          className=\"modal modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <DateInfo text={\"Book Slot\"} time={hours} date={date} />\r\n          <Formik\r\n            initialValues={values}\r\n            validationSchema={nicknameSchema}\r\n            onSubmit={({ Nickname }) => {\r\n              dispatch(bookSelectedSlot(Nickname, date, number, hours));\r\n              openBooking(false);\r\n            }}\r\n          >\r\n            <Form>\r\n              <div key={\"Nickname\"} className=\"modal__input\">\r\n                <label htmlFor={\"Nickname\"}>User Nickname</label>\r\n                <Field name={\"Nickname\"} type=\"text\" />\r\n                <ErrorMessage name={\"Nickname\"}>\r\n                  {(msg) => (\r\n                    <div className=\"form__error modal__error\">{msg}</div>\r\n                  )}\r\n                </ErrorMessage>\r\n              </div>\r\n              <div className=\"modal__buttons\">\r\n                <button className=\"form__button\" type=\"submit\">\r\n                  BOOK\r\n                </button>\r\n                <button\r\n                  className=\"form__button\"\r\n                  onClick={() => openBooking(false)}\r\n                >\r\n                  CLOSE\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </Formik>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent {...props} openBooking={openBooking} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { chooseSlot } from \"redux/admin/adminActions\";\r\nimport { useDateCheck } from \"custom-hooks\";\r\nimport { withBookingModal } from \"../../withBookingModal\";\r\nimport { withDetailsModal } from \"../../withDetailsModal\";\r\n\r\nconst AdminSlot = ({\r\n  props: {\r\n    hours,\r\n    lastBooking,\r\n    number,\r\n    openBooking,\r\n    openDetails,\r\n    slotId,\r\n    taken,\r\n  },\r\n}) => {\r\n  let [unavailable, style] = useDateCheck(taken, lastBooking, false, slotId);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={`booking__slot booking__slot${style}`}>\r\n      <h2>{hours}</h2>\r\n      {unavailable ? (\r\n        <p>Unavailable</p>\r\n      ) : (\r\n        <>\r\n          <p>{slotId ? \"Taken\" : \"Available\"}</p>\r\n          <button\r\n            onClick={() => {\r\n              slotId ? openDetails(true) : openBooking(true);\r\n              dispatch(chooseSlot({ slotId, hours, number }));\r\n            }}\r\n          >\r\n            {slotId ? \"DETAILS\" : \"BOOK\"}\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst withModals = compose(withBookingModal, withDetailsModal);\r\nconst slotWithModals = withModals(AdminSlot);\r\nexport { slotWithModals as Slot };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { DateInfo } from \"../DateInfo\";\r\n\r\nimport { deleteSelectedSlot, getDetails } from \"redux/admin/adminUtils\";\r\n\r\nexport const withDetailsModal = (WrappedComponent) => ({\r\n  props: { ...props },\r\n  openBooking,\r\n}) => {\r\n  const [isOpen, openDetails] = useState(false);\r\n  const date = useSelector((store) => store.board.date);\r\n  const {\r\n    choosedSlot: { hours },\r\n    details: { user },\r\n  } = useSelector((store) => store.admin);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Modal.setAppElement(\"#root\");\r\n      dispatch(getDetails(props.slotId));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal\r\n          isOpen={isOpen}\r\n          contentLabel=\"Details\"\r\n          className=\"modal details-modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <DateInfo text={\"Booking Details\"} date={date} time={hours} />\r\n          <div className=\"modal__user\">\r\n            <p>User</p>\r\n            <p>\r\n              <span>{user}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button\r\n              onClick={() => {\r\n                dispatch(deleteSelectedSlot(date, props.slotId));\r\n                openDetails(false);\r\n              }}\r\n            >\r\n              DELETE\r\n            </button>\r\n            <button onClick={() => openDetails(false)}>CLOSE</button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent props={{ openBooking, openDetails, ...props }} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { activateToast, resetToast } from \"redux/toast/toastActions\";\r\n\r\nexport const Toast = ({ text, toastType }) => {\r\n  const { toastActive, type } = useSelector(({ toast }) => toast);\r\n  const dispatch = useDispatch();\r\n\r\n  const notify = () => {\r\n    toast.warn(text, {\r\n      position: \"top-right\",\r\n      autoClose: true,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      onOpen: () => dispatch(activateToast()),\r\n      onClose: () => dispatch(resetToast()),\r\n    });\r\n  };\r\n  return <>{!toastActive && toastType === type ? notify() : null}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { slots } from \"utils/slots\";\r\n\r\nimport { Slot } from \"./Slot\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nexport const AdminSlots = () => {\r\n  const error = useSelector((state) => state.admin.error);\r\n  const takenSlots = useSelector((state) => state.board.takenSlots);\r\n\r\n  const renderSlots = () =>\r\n    slots.map(({ number, ...props }) => {\r\n      let taken = takenSlots.filter((takenSlot) => number === takenSlot.number);\r\n      return taken.length ? (\r\n        <Slot\r\n          key={number}\r\n          props={{ number, slotId: taken[0]._id, taken, ...props }}\r\n        />\r\n      ) : (\r\n        <Slot key={number} props={{ number, ...props }} />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"booking__slots\">\r\n      {renderSlots()}\r\n      <Toast text={\"Slot booked\"} toastType=\"BOOK\" />\r\n      <Toast text={\"Slot deleted\"} toastType=\"DELETE\" />\r\n      <Toast text={error} toastType={\"ERROR\"} />\r\n    </div>\r\n  );\r\n};\r\n","import * as types from \"./bookingTypes\";\r\n\r\nexport const startBooking = () => ({\r\n  type: types.START_BOOKING,\r\n});\r\n\r\nexport const bookingSuccess = (bookedSlot) => ({\r\n  type: types.BOOKING_SUCCESS,\r\n  payload: { bookedSlot },\r\n});\r\n\r\nexport const bookingFailure = (error) => ({\r\n  type: types.BOOKING_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const resetCurrentBooking = () => ({\r\n  type: types.RESET_BOOKING,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { addDays } from \"date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchDate } from \"redux/board/boardUtils\";\r\nimport { resetBookings } from \"redux/board/boardActions\";\r\nimport { resetCurrentBooking } from \"redux/booking/bookingActions\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const Datepicker = ({ name }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const bookedSlot = useSelector((state) => state.booking.bookedSlot);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetBookings());\r\n    dispatch(resetCurrentBooking());\r\n    dispatch(fetchDate(startDate));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [startDate, bookedSlot]);\r\n\r\n  return (\r\n    <div className={`${name}__datepicker`}>\r\n      <DatePicker\r\n        maxDate={addDays(new Date(), 7)}\r\n        minDate={new Date()}\r\n        onChange={(date) => setStartDate(date)}\r\n        selected={startDate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logout } from \"redux/user/userActions\";\r\n\r\nexport const Logout = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <button className=\"logout\" onClick={() => dispatch(logout())}>\r\n      LOGOUT\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { AdminSlots } from \"components/adminComponents/AdminSlots\";\r\nimport { Datepicker } from \"components/Datepicker\";\r\nimport { Logout } from \"components/Logout\";\r\n\r\nexport const Bookings = () => (\r\n  <div className=\"bookings\">\r\n    <Datepicker name=\"bookings\" />\r\n    <AdminSlots />\r\n    <Logout />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport const IconProvider = ({ icon, name }) => (\r\n  <IconContext.Provider value={{ className: name }}>\r\n    {icon}\r\n  </IconContext.Provider>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const BackArrow = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <div className=\"back-arrow\" onClick={() => history.goBack()}>\r\n      <IconProvider icon={<MdArrowBack />} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Error = ({ errorMsg, name, icon }) => (\r\n  <div className={`${name} error`}>\r\n    {icon && <IconProvider icon={<MdError />} name={`${name} error__icon`} />}\r\n    <p>{errorMsg}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Error } from \"components/Error\";\r\n\r\nexport const FormWrapper = ({ action, title, render }) => {\r\n  const error = useSelector((state) => state.user.error);\r\n  return (\r\n    <div className=\"form__wrapper\">\r\n      {error && <Error name=\"form__error main\" errorMsg={error} />}\r\n      <h2>{title}</h2>\r\n      {render()}\r\n      <button className=\"form__button\" type=\"submit\">\r\n        {action}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\n\r\nimport { adminChangePasswordSchema } from \"services/validation\";\r\nimport { changeUserPassword } from \"redux/admin/adminUtils\";\r\n\r\nimport { BackArrow } from \"components/BackArrow\";\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nconst values = {\r\n  newPassword: \"\",\r\n  newPasswordConfirm: \"\",\r\n};\r\n\r\nexport const Password = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"password\">\r\n      <BackArrow />\r\n      <Toast text={\"Password Changed\"} toastType={\"CHANGE\"} />\r\n      <Formik\r\n        initialValues={values}\r\n        validationSchema={adminChangePasswordSchema}\r\n        onSubmit={({ newPassword }, { resetForm }) => {\r\n          resetForm({});\r\n          dispatch(changeUserPassword(id, newPassword));\r\n        }}\r\n      >\r\n        <Form className=\"password__form\">\r\n          <FormWrapper\r\n            title={\"Change Password\"}\r\n            action={\"CHANGE\"}\r\n            render={() =>\r\n              Object.keys(values).map((value) => (\r\n                <div key={value} className=\"form__input\">\r\n                  <label htmlFor={value}>\r\n                    {value === \"newPassword\"\r\n                      ? \"New Password\"\r\n                      : \"Confirm New Password\"}\r\n                  </label>\r\n                  <Field name={value} type=\"Password\" />\r\n                  <ErrorMessage name={value}>\r\n                    {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              ))\r\n            }\r\n          />\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Error = () => {\r\n  const { error } = useSelector((state) => state.booking);\r\n\r\n  return (\r\n    error && (\r\n      <div className=\"booking__wrapper\">\r\n        <div className=\"booking__error\">{error}</div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <FadeLoader size={55} color={\"#b82601\"} loading={true} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Loader } from \"components/Loader\";\r\nimport { Error } from \"components/Error\";\r\n\r\nexport const withError = (WrappedComponent) => ({\r\n  error,\r\n  loading,\r\n  ...props\r\n}) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Error\r\n      errorMsg={\"Ooops... Something went wrong. Try again later.\"}\r\n      name={\"main\"}\r\n      icon={true}\r\n    />\r\n  ) : (\r\n    <WrappedComponent {...props} />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nexport const withConfirm = (WrappedComponent) => ({ ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open) Modal.setAppElement(\"#root\");\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <Modal\r\n          isOpen={open}\r\n          contentLabel=\"Confirmation\"\r\n          className=\"modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <h2>Are you sure?</h2>\r\n          <button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              setConfirm(true);\r\n            }}\r\n          >\r\n            YES\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            NO\r\n          </button>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent {...props} setOpen={setOpen} confirm={confirm} />\r\n    </>\r\n  );\r\n};\r\n","import * as types from \"./userBookingsTypes\";\r\n\r\nexport const fetchUserBookings = () => ({\r\n  type: types.FETCH_BOOKINGS,\r\n});\r\n\r\nexport const fetchUserBookingsSuccess = (userBookings) => ({\r\n  type: types.FETCH_BOOKINGS_SUCCESS,\r\n  payload: { userBookings },\r\n});\r\n\r\nexport const fetchUserBookingsFailure = (error) => ({\r\n  type: types.FETCH_BOOKINGS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteUserBooking = () => ({\r\n  type: types.DELETE_BOOKING,\r\n});\r\n\r\nexport const deleteUserBookingSuccess = () => ({\r\n  type: types.DELETE_BOOKING_SUCCESS,\r\n});\r\n\r\nexport const deleteUserBookingFailure = (error) => ({\r\n  type: types.DELETE_BOOKING_FAILURE,\r\n  payload: { error },\r\n});\r\n","import * as actions from \"./userBookingsActions\";\r\n\r\nimport { fetchUserBookings, deleteSlot } from \"services/Booking\";\r\nimport { sortByDates } from \"services/Date\";\r\nimport { fetchDate } from \"../board/boardUtils\";\r\nimport { enableToast } from \"../toast/toastActions\";\r\n\r\nexport const getUsersBookings = () => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.fetchUserBookings());\r\n    const response = await fetchUserBookings();\r\n    let sortedResponse = await sortByDates(response.data);\r\n    dispatch(actions.fetchUserBookingsSuccess(sortedResponse));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteUserBookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.deleteUserBookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUsersBooking = (\r\n  date,\r\n  id,\r\n  requestFromBoardSlot = false\r\n) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.deleteUserBooking());\r\n    await deleteSlot(date, id);\r\n    await dispatch(actions.deleteUserBookingSuccess());\r\n    if (requestFromBoardSlot) {\r\n      await dispatch(enableToast(\"CANCEL\"));\r\n      dispatch(fetchDate(date, true));\r\n    } else {\r\n      dispatch(getUsersBookings());\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteUserBookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.deleteUserBookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { selectSlot } from \"redux/board/boardActions\";\r\nimport { useDateCheck } from \"custom-hooks\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nimport { deleteUsersBooking } from \"redux/userBookings/userBookingsUtils\";\r\n\r\nconst Slot = ({\r\n  confirm,\r\n  props: { hours, id, lastBooking, number },\r\n  selected,\r\n  setOpen,\r\n  taken,\r\n}) => {\r\n  let [unavailable, style] = useDateCheck(taken, lastBooking, selected);\r\n  const date = useSelector((state) => state.board.date);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (confirm) dispatch(deleteUsersBooking(date, id, true));\r\n  }, [confirm, date, dispatch, id, number]);\r\n\r\n  return (\r\n    <div className={`booking__slot booking__slot${style}`}>\r\n      <h2>{hours}</h2>\r\n      {unavailable && !id && <h2>Unavailable</h2>}\r\n      {id && (\r\n        <>\r\n          <h2 className=\"booking__slot__info\">Your Booking</h2>\r\n          <button onClick={() => setOpen(true)}>Cancel</button>\r\n        </>\r\n      )}\r\n      {!unavailable && (\r\n        <button onClick={() => dispatch(selectSlot({ number, hours }))}>\r\n          SELECT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst slotWithConfirm = withConfirm(Slot);\r\nexport { slotWithConfirm as Slot };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Slot } from \"../Slot\";\r\n\r\nimport { slots } from \"utils/slots\";\r\n\r\nexport const Slots = () => {\r\n  const { selectedSlot, takenSlots } = useSelector((state) => state.board);\r\n  const loggedUser = useSelector((state) => state.user.id);\r\n\r\n  const renderSlots = () =>\r\n    slots.map(({ number, ...props }) => {\r\n      const takenSlot = takenSlots.filter((slot) => number === slot.number);\r\n      if (takenSlot.length) {\r\n        const id = takenSlot[0].user === loggedUser ? takenSlot[0]._id : null;\r\n        return <Slot key={number} taken props={{ id, number, ...props }} />;\r\n      }\r\n\r\n      return selectedSlot.number === number ? (\r\n        <Slot key={number} selected props={{ number, ...props }} />\r\n      ) : (\r\n        <Slot key={number} props={{ number, ...props }} />\r\n      );\r\n    });\r\n\r\n  return <div className=\"booking__slots\">{renderSlots()}</div>;\r\n};\r\n","import * as actions from \"./bookingActions\";\r\n\r\nimport { bookSlot } from \"services/Booking\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\n\r\nexport const bookSelectedSlot = (date, selectedSlot) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.startBooking());\r\n    const response = await bookSlot(date, selectedSlot);\r\n    dispatch(actions.bookingSuccess(response.data));\r\n    dispatch(enableToast(\"BOOK\"));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.bookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.bookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { bookSelectedSlot } from \"redux/booking/bookingUtils\";\r\nimport { bookingFailure } from \"redux/booking/bookingActions\";\r\n\r\nexport const BookButton = () => {\r\n  const { date, selectedSlot } = useSelector((state) => state.board);\r\n  const dispatch = useDispatch();\r\n\r\n  const bookSlot = async () => {\r\n    if (!selectedSlot)\r\n      return dispatch(bookingFailure(\"You have to select slot before book...\"));\r\n    dispatch(bookSelectedSlot(date, selectedSlot));\r\n  };\r\n\r\n  return (\r\n    <button className=\"booking__button\" onClick={() => bookSlot()}>\r\n      BOOK\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Error } from \"./Error\";\r\nimport { withError } from \"HOC/withError\";\r\nimport { Slots } from \"./Slots\";\r\nimport { Toast } from \"components/Toast\";\r\nimport { BookButton } from \"./BookButton\";\r\n\r\nconst Booking = () => (\r\n  <div className=\"booking\">\r\n    <Slots />\r\n    <BookButton />\r\n    <Error />\r\n    <Toast text={\"Slot booked\"} toastType=\"BOOK\" />\r\n    <Toast text={\"Booking canceled\"} toastType={\"CANCEL\"} />\r\n  </div>\r\n);\r\n\r\nconst bookingWithError = withError(Booking);\r\nexport { bookingWithError as Booking };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Booking } from \"components/Booking\";\r\nimport { Datepicker } from \"components/Datepicker\";\r\nimport { Logout } from \"components/Logout\";\r\n\r\nexport const BookingBoard = () => {\r\n  const { error, loading } = useSelector((state) => state.board);\r\n  return (\r\n    <div className=\"booking-board__wrapper\">\r\n      <Datepicker name=\"booking-board\" />\r\n      <Booking error={error} loading={loading} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { MdPhone } from \"react-icons/md\";\r\n\r\nexport const footerData = [\r\n  [<GoLocation />, [\"21 Kamienna Street\", \"Warsaw, Poland\"]],\r\n  [<MdEmail />, [\"laundry_dorn@gmail.com\"]],\r\n  [<MdPhone />, [\"+48 888 436 493\"]],\r\n];\r\n","import React from \"react\";\r\n\r\nimport { footerData } from \"./utils\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"footer__wrapper\">\r\n      {footerData.map(([icon, textArray]) => (\r\n        <div key={textArray[0]} className=\"container\">\r\n          <IconProvider name={\"container__icon\"} icon={icon} />\r\n          <div className=\"container__text\">\r\n            {textArray.map((text) => (\r\n              <p key={text}>{text}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Front = () => (\r\n  <div className=\"homepage__front\">\r\n    <div className=\"homepage__welcome\">\r\n      <h2>Welcome at</h2>\r\n      <h1 className=\"homepage__header\">\r\n        Student <span>Dorm</span> Laundry\r\n      </h1>\r\n    </div>\r\n    <div className=\"homepage__buttons\">\r\n      <Link to=\"/sign-in\">\r\n        <button className=\"button__signin\">SIGN IN</button>\r\n      </Link>\r\n      <Link to=\"/sign-up\">\r\n        <button className=\"button__signup\">SIGN UP</button>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { MdCreate } from \"react-icons/md\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport { GoCalendar } from \"react-icons/go\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { GiClothespin } from \"react-icons/gi\";\r\n\r\nexport const tiles = [\r\n  [<MdCreate />, \"Create Account\", true],\r\n  [<FiLogIn />, \"Sign In\", true],\r\n  [<GoCalendar />, \"Choose Date\", true],\r\n  [<FaCheckCircle />, \"Book\", true],\r\n  [<GiClothespin />, \"Do Laundry!\", false],\r\n];\r\n","import React from \"react\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Tile = ({ props: [animate, icon, text, arrow] }) => (\r\n  <>\r\n    <div className={`homepage__tile ${animate}`}>\r\n      <div className=\"homepage__tile__wrapper--top\">\r\n        <IconProvider icon={icon} name={\"homepage__tile__icon\"} />\r\n      </div>\r\n      <div className=\"homepage__tile__wrapper\">\r\n        <h3>{text}</h3>\r\n      </div>\r\n    </div>\r\n    {arrow && (\r\n      <IconProvider\r\n        icon={<FaArrowRight />}\r\n        name={`homepage__tile__arrow ${animate}`}\r\n      />\r\n    )}\r\n  </>\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { tiles } from \"./utils\";\r\n\r\nimport { Tile } from \"components/Tile\";\r\n\r\nexport const Instruction = () => {\r\n  const [animate, setAnimate] = useState();\r\n  useEffect(() => {\r\n    let scroll = window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 500) setAnimate(\"animate\");\r\n    });\r\n    return () => window.removeEventListener(\"scroll\", scroll);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage__instruction\">\r\n      <div className=\"homepage__instruction--header\">\r\n        <h2>\r\n          <span>How it Works?</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"homepage__tiles\">\r\n        {tiles.map((props) => (\r\n          <Tile key={props[1]} props={[animate, ...props]} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Footer } from \"components/Footer\";\r\nimport { Front } from \"components/Front\";\r\nimport { Instruction } from \"components/Instruction\";\r\n\r\nexport const Home = () => (\r\n  <div className=\"homepage\">\r\n    <Front />\r\n    <Instruction />\r\n    <Footer />\r\n  </div>\r\n);\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const deleteAccount = async () => axiosInstance.delete(`/user`);\r\n\r\nexport const signIn = async (name, password) =>\r\n  axiosInstance.post(\"/user/login\", { name, password });\r\n\r\nexport const signUp = async (name, password, email) =>\r\n  axiosInstance.post(\"/user/create\", { name, email, password });\r\n\r\nexport const passwordChange = async (password, newPassword) =>\r\n  axiosInstance.post(\"/user/change-password\", { password, newPassword });\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nimport { logUser } from \"redux/user/userUtils\";\r\nimport { loginSchema } from \"services/validation\";\r\n\r\nconst values = { Nickname: \"\", Password: \"\" };\r\n\r\nexport const SignIn = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      validationSchema={loginSchema}\r\n      onSubmit={({ Nickname, Password }) =>\r\n        dispatch(logUser(Nickname, Password))\r\n      }\r\n    >\r\n      <Form className=\"signup\">\r\n        <Toast text={\"Account Deleted\"} toastType={\"DELETE\"} />\r\n        <FormWrapper\r\n          title={\"Sign In\"}\r\n          action={\"LOGIN\"}\r\n          render={() =>\r\n            Object.keys(values).map((value) => (\r\n              <div key={value} className=\"form__input\">\r\n                <label htmlFor={value}>{value}</label>\r\n                <Field name={value} type={value} />\r\n                <ErrorMessage name={value}>\r\n                  {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            ))\r\n          }\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import * as actions from \"./userActions\";\r\n\r\nimport { signIn, signUp, deleteAccount, passwordChange } from \"services/User\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\n\r\nexport const logUser = (name, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.login());\r\n    const response = await signIn(name, password);\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    await dispatch(actions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.loginFailure(error.response.data.errors[0].msg));\r\n    } else {\r\n      dispatch(actions.loginFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const registerUser = ({ Nickname, Password, Email }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.login());\r\n    const response = await signUp(Nickname, Password, Email);\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    await dispatch(actions.loginSuccess(response));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.loginFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.loginFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUser = () => async (dispatch) => {\r\n  try {\r\n    await deleteAccount();\r\n    dispatch(enableToast(\"DELETE\"));\r\n    dispatch(actions.logout());\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.changePasswordFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.changePasswordFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const changePassword = (password, newPassword) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.changePassword());\r\n    await passwordChange(password, newPassword);\r\n    dispatch(actions.changePasswordSuccess());\r\n    dispatch(enableToast(\"CHANGE\"));\r\n    dispatch(actions.clearErrors());\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.changePasswordFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.changePasswordFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\n\r\nimport { registerUser } from \"redux/user/userUtils\";\r\nimport { registrationSchema } from \"services/validation\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n  Email: \"\",\r\n  Password: \"\",\r\n  Repassword: \"\",\r\n};\r\n\r\nexport const SignUp = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      validationSchema={registrationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        dispatch(registerUser(values));\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      <Form className=\"signup\">\r\n        <FormWrapper\r\n          title={\"Create Account\"}\r\n          action={\"SUBMIT\"}\r\n          render={() =>\r\n            Object.keys(values).map((value) => (\r\n              <div key={value} className=\"form__input\">\r\n                <label htmlFor={value}>{value}</label>\r\n                <Field\r\n                  name={value}\r\n                  type={value === \"Repassword\" ? \"password\" : value}\r\n                />\r\n                <ErrorMessage name={value}>\r\n                  {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            ))\r\n          }\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { deleteUser } from \"redux/user/userUtils\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nconst Delete = ({ confirm, name, setOpen }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (confirm) dispatch(deleteUser());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [confirm]);\r\n\r\n  return (\r\n    <button className={name} onClick={() => setOpen(true)}>\r\n      DELETE\r\n    </button>\r\n  );\r\n};\r\n\r\nconst deleteWithConfirm = withConfirm(Delete);\r\nexport { deleteWithConfirm as Delete };\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\n\r\nimport { changePasswordSchema } from \"services/validation\";\r\nimport { changePassword } from \"redux/user/userUtils\";\r\n\r\nimport { Delete } from \"components/Delete\";\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Logout } from \"components/Logout\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nconst values = {\r\n  Password: \"\",\r\n  newPassword: \"\",\r\n  newPasswordConfirm: \"\",\r\n};\r\n\r\nexport const User = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"user-page\">\r\n      <Toast text={\"Password Changed\"} toastType={\"CHANGE\"} />\r\n      <Formik\r\n        initialValues={values}\r\n        validationSchema={changePasswordSchema}\r\n        onSubmit={({ Password, newPassword }, { resetForm }) => {\r\n          resetForm({});\r\n          dispatch(changePassword(Password, newPassword));\r\n        }}\r\n      >\r\n        <Form className=\"signup\">\r\n          <FormWrapper\r\n            title={\"Change Password\"}\r\n            action={\"CHANGE\"}\r\n            render={() =>\r\n              Object.keys(values).map((value) => (\r\n                <div key={value} className=\"form__input\">\r\n                  <label htmlFor={value}>\r\n                    {value === \"Password\"\r\n                      ? value\r\n                      : value === \"newPassword\"\r\n                      ? \"New Password\"\r\n                      : \"Confirm New Password\"}\r\n                  </label>\r\n                  <Field name={value} type=\"Password\" />\r\n                  <ErrorMessage name={value}>\r\n                    {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              ))\r\n            }\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      <Delete name={\"delete\"} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = () => (\r\n  <thead>\r\n    <tr>\r\n      <th>Number</th>\r\n      <th>Date</th>\r\n      <th>Hours</th>\r\n      <th>Cancel</th>\r\n    </tr>\r\n  </thead>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Information = () => (\r\n  <tr>\r\n    <td className=\"empty\" colSpan=\"4\">\r\n      Booking list is empty.\r\n    </td>\r\n  </tr>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nimport { deleteUsersBooking } from \"redux/userBookings/userBookingsUtils\";\r\nimport { deleteSelectedSlot } from \"redux/admin/adminUtils\";\r\n\r\nconst Row = ({ confirm, data: { date, hours, _id }, number, setOpen }) => {\r\n  const { isAdmin } = useSelector((store) => store.user);\r\n  const userId = useSelector((store) => store.admin.user._id);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin && confirm) dispatch(deleteUsersBooking(date, _id));\r\n  }, [_id, confirm, date, dispatch, id, isAdmin, userId]);\r\n\r\n  const deleteSlot = () =>\r\n    dispatch(deleteSelectedSlot(date, _id, isAdmin, userId));\r\n\r\n  return (\r\n    <tr>\r\n      <td>{number + 1}.</td>\r\n      <td>{date}</td>\r\n      <td>{hours}</td>\r\n      <td>\r\n        <button\r\n          className=\"cancel\"\r\n          onClick={() => (isAdmin ? deleteSlot() : setOpen(true))}\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst rowWithConfirm = withConfirm(Row);\r\nexport { rowWithConfirm as Row };\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { withError } from \"HOC/withError\";\r\nimport { Information } from \"./Information\";\r\nimport { Row } from \".//Row\";\r\n\r\nconst UserTable = ({ bookings }) => (\r\n  <table>\r\n    <Header />\r\n    <tbody>\r\n      {bookings.length ? (\r\n        bookings.map((slot, index) => (\r\n          <Row key={index} data={slot} number={index} />\r\n        ))\r\n      ) : (\r\n        <Information />\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nconst userTableWithError = withError(UserTable);\r\nexport { userTableWithError as UserTable };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUsersBookings } from \"redux/userBookings/userBookingsUtils\";\r\n\r\nimport { Logout } from \"components/Logout\";\r\nimport { UserTable } from \"components/UserTable\";\r\n\r\nexport const UserBookings = () => {\r\n  const { error, loading, userBookings } = useSelector(\r\n    (state) => state.userBookings\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersBookings());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"user-bookings\">\r\n      <UserTable bookings={userBookings} error={error} loading={loading} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUser, getUserBookings } from \"redux/admin/adminUtils\";\r\nimport { UserTable } from \"components/UserTable\";\r\nimport { Toast } from \"components/Toast\";\r\nimport { BackArrow } from \"components/BackArrow\";\r\n\r\nexport const UserDetails = () => {\r\n  const { name, email, date } = useSelector(({ admin }) => admin.user);\r\n  const { userBookings } = useSelector(({ admin }) => admin);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser(id));\r\n    dispatch(getUserBookings(id));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"user-details\">\r\n      <BackArrow />\r\n      <h2>User Details</h2>\r\n      <div className=\"user-details__info\">\r\n        <p>\r\n          <span>Nickname:</span> {name}\r\n        </p>\r\n        <p>\r\n          <span>Email:</span> {email}\r\n        </p>\r\n        <p>\r\n          <span>Joining date:</span> {date ? date.slice(0, 10) : null}\r\n        </p>\r\n      </div>\r\n      <h3>User Bookings</h3>\r\n      {userBookings && <UserTable bookings={userBookings} />}\r\n      <Toast text={\"Slot deleted\"} toastType=\"DELETE\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = () => (\r\n  <thead>\r\n    <tr>\r\n      <th>Username</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Information = () => (\r\n  <tr>\r\n    <td className=\"empty\" colSpan=\"2\">\r\n      Nothing found. Try to search other term.\r\n    </td>\r\n  </tr>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { handleBlockStatus } from \"redux/admin/adminUtils\";\r\n\r\nexport const Row = ({ name, id, isBlocked }) => {\r\n  const [block, setBlock] = useState(isBlocked);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>\r\n        <Link to={`/admin/user/${id}`}>\r\n          <button>Details</button>\r\n        </Link>\r\n\r\n        <Link to={`/admin/user/password/${id}`}>\r\n          <button>Password</button>\r\n        </Link>\r\n\r\n        <button\r\n          onClick={() => {\r\n            dispatch(handleBlockStatus(id, block));\r\n            setBlock(!block);\r\n          }}\r\n        >\r\n          {block ? \"Unblock\" : \"Block\"}\r\n        </button>\r\n        <button onClick={() => alert(\"Functionality disabled\")}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Information } from \"./Information\";\r\nimport { Row } from \"./Row\";\r\n\r\nexport const UsersTable = ({ users }) => (\r\n  <table>\r\n    <Header />\r\n    <tbody>\r\n      {users.length ? (\r\n        users.map(({ ...props }, index) => <Row key={index} {...props} />)\r\n      ) : (\r\n        <Information />\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getUsers } from \"redux/admin/adminUtils\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n};\r\n\r\nexport const UserSearch = ({ name }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      onSubmit={({ Nickname }) => {\r\n        dispatch(getUsers(Nickname));\r\n      }}\r\n    >\r\n      <Form className={name}>\r\n        <Field name={\"Nickname\"} type=\"text\" placeholder={\"User Nickname\"} />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { getPages } from \"./utils\";\r\n\r\nexport const Pagination = ({ currentPage, setCurrentPage, pages }) => (\r\n  <div className=\"pagination\">\r\n    {getPages([...Array(pages).keys()], currentPage).map((number, index) => (\r\n      <p\r\n        className={number === currentPage ? \"active\" : \"\"}\r\n        onClick={() => setCurrentPage(number)}\r\n        key={index}\r\n      >\r\n        {number + 1}\r\n      </p>\r\n    ))}\r\n  </div>\r\n);\r\n","export const getPages = (array, currentPage) => {\r\n  const [indexDown, indexUp] =\r\n    currentPage <= 3\r\n      ? [0, 5]\r\n      : currentPage > 3 && currentPage < array.length - 4\r\n      ? [currentPage - 2, currentPage + 3]\r\n      : [array.length - 5, array.length];\r\n\r\n  return array.slice(indexDown, indexUp);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Logout } from \"components/Logout\";\r\nimport { UsersTable } from \"components/adminComponents/UsersTable\";\r\nimport { UserSearch } from \"components/adminComponents/UserSearch\";\r\nimport { Pagination } from \"components/Pagination\";\r\n\r\nexport const UsersSearch = () => {\r\n  const [pages, setPages] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [usersToDisplay, setUsersToDisplay] = useState([]);\r\n  const users = useSelector((store) => store.admin.users);\r\n  const ROWS_ON_PAGE = 10;\r\n\r\n  useEffect(() => {\r\n    if (users) {\r\n      setPages(Math.ceil(users.length / ROWS_ON_PAGE));\r\n      const companieSlice = users.slice(\r\n        currentPage * ROWS_ON_PAGE,\r\n        currentPage * ROWS_ON_PAGE + ROWS_ON_PAGE\r\n      );\r\n      setUsersToDisplay(companieSlice);\r\n    }\r\n  }, [users, currentPage]);\r\n\r\n  return (\r\n    <div className=\"users-search\">\r\n      <UserSearch name={\"users-search__input\"} />\r\n      <UsersTable users={usersToDisplay} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        pages={pages}\r\n      />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\n\r\nimport { Route } from \"components/Route\";\r\n\r\nimport { Bookings } from \"pages/Admin/Bookings\";\r\nimport { Password } from \"pages/Admin/Password\";\r\nimport { BookingBoard } from \"pages/BookingBoard\";\r\nimport { Home } from \"pages/Home\";\r\nimport { SignIn } from \"pages/SignIn\";\r\nimport { SignUp } from \"pages/SignUp\";\r\nimport { User } from \"pages/User\";\r\nimport { UserBookings } from \"pages/UserBookings\";\r\nimport { UserDetails } from \"pages/Admin/UserDetails\";\r\nimport { UsersSearch } from \"pages/Admin/UsersSearch\";\r\n\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/admin\" component={Bookings} secured />\r\n    <Route exact path=\"/admin/search\" component={UsersSearch} secured />\r\n    <Route exact path=\"/admin/user/:id\" component={UserDetails} secured />\r\n    <Route exact path=\"/admin/user/password/:id\" component={Password} secured />\r\n    <Route path=\"/booking-board\" component={BookingBoard} secured />\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sign-in\" component={SignIn} />\r\n    <Route path=\"/sign-up\" component={SignUp} />\r\n    x`\r\n    <Route path=\"/user\" component={User} secured />\r\n    <Route path=\"/user-bookings\" component={UserBookings} secured />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"./css/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport store from \"redux/store\";\r\n\r\nimport { NavBar } from \"components/NavBar\";\r\nimport { Routes } from \"components/Routes\";\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <Router basename=\"/laundry-front\">\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <Routes />\r\n        <ToastContainer autoClose={2000} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n);\r\n"],"sourceRoot":""}