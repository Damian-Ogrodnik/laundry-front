{"version":3,"sources":["redux/user/userReducer.js","redux/user/userTypes.js","redux/board/boardReducer.js","redux/board/boardTypes.js","redux/booking/bookingReducer.js","redux/booking/bookingTypes.js","redux/userBookings/userBookingsReducer.js","redux/userBookings/userBookingsTypes.js","redux/toast/toastReducer.js","redux/toast/toastTypes.js","redux/admin/adminReducer.js","redux/admin/adminTypes.js","redux/rootReducer.js","redux/store.js","components/NavBar/utils.js","components/NavBar/NavBar.js","redux/user/userActions.js","components/Route/Route.js","utils/slots.js","redux/admin/adminActions.js","services/Date.js","custom-hooks/index.js","services/validation.js","services/Axios.js","services/Admin.js","redux/toast/toastActions.js","redux/board/boardActions.js","services/Booking.js","redux/board/boardUtils.js","redux/admin/adminUtils.js","components/adminComponents/DateInfo/DateInfo.js","components/adminComponents/withBookingModal/withBookingModal.js","components/adminComponents/AdminSlots/Slot/Slot.js","components/adminComponents/withDetailsModal/withDetailsModal.js","components/Toast/Toast.js","components/adminComponents/AdminSlots/AdminSlots.js","redux/booking/bookingActions.js","components/Datepicker/Datepicker.js","components/Logout/Logout.js","pages/Admin/Bookings/Bookings.js","components/IconProvider/IconProvider.js","components/BackArrow/BackArrow.js","components/Error/Error.js","components/FormWrapper/FormWrapper.js","pages/Admin/Password/Password.js","components/Booking/Error/Error.js","components/Loader/Loader.js","HOC/withError/withError.js","HOC/withConfirm/withConfirm.js","redux/userBookings/userBookingsActions.js","redux/userBookings/userBookingsUtils.js","components/Booking/Slot/Slot.js","components/Booking/Slots/Slots.js","redux/booking/bookingUtils.js","components/Booking/BookButton/BookButton.js","components/Booking/Booking.js","pages/BookingBoard/BookingBoard.js","components/Footer/utils.js","components/Footer/Footer.js","components/Front/Front.js","components/Instruction/utils.js","components/Tile/Tile.js","components/Instruction/Instruction.js","pages/Home/Home.js","services/User.js","pages/SignIn/SignIn.js","redux/user/userUtils.js","pages/SignUp/SignUp.js","components/Delete/Delete.js","pages/User/User.js","components/UserTable/Header/Header.js","components/UserTable/Information/Information.js","components/UserTable/Row/Row.js","components/UserTable/UserTable.js","pages/UserBookings/UserBookings.js","pages/Admin/UserDetails/UserDetails.js","components/adminComponents/UsersTable/Header/Header.js","components/adminComponents/UsersTable/Information/Information.js","components/adminComponents/UsersTable/Row/Row.js","components/adminComponents/UsersTable/UsersTable.js","components/adminComponents/UserSearch/UserSearch.js","components/Pagination/Pagination.js","components/Pagination/utils.js","pages/Admin/UsersSearch/UsersSearch.js","components/Routes/Routes.js","index.js","App.js"],"names":["initialState","error","loading","logged","id","isAdmin","name","token","user","userReducer","state","action","type","payload","admin","date","takenSlots","selectedSlot","boardReducer","slotNumber","bookedSlot","bookingReducer","userBookings","userBookingsReducer","toastActive","undefined","toastReducer","choosedSlot","details","users","adminReducer","rootReducer","combineReducers","board","booking","userBookingReducer","toast","store","createStore","composeWithDevTools","applyMiddleware","thunk","loggedNav","unloggedNav","adminNav","NavBar","useSelector","className","data","map","text","link","key","activeClassName","exact","to","loginSuccess","loginFailure","changePasswordFailure","Route","Component","component","secured","path","rest","dispatch","useDispatch","useEffect","render","props","slots","number","hours","lastBooking","bookSlotFailure","deleteSlotFailure","getUsersFailure","getUsersSuccess","checkAvailability","a","async","available","today","Date","setHours","split","day","month","year","bookDate","getHours","standarizeDate","getUTCDate","getUTCMonth","getUTCFullYear","sortByDates","bookings","sort","aBooking","bBooking","aDay","aMonth","aYear","bDay","bMonth","bYear","sortedBookings","removeOldDates","filter","useDateCheck","taken","selected","useState","unavailable","setUnavailability","style","setStyle","avaiability","check","registrationSchema","Yup","shape","Nickname","max","required","Email","email","Password","min","Repassword","when","is","val","length","then","oneOf","loginSchema","nicknameSchema","changePasswordSchema","newPassword","newPasswordConfirm","adminChangePasswordSchema","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","Authorization","localStorage","Promise","reject","bookSlot","post","changePassword","deleteSlot","delete","fetchDetails","get","fetchUsers","params","fetchUser","fetchUserBookings","handleBlock","isBlocked","enableToast","setDate","getSlotsFailure","getSlotsSuccess","fetchBookings","fetchDate","standarized","actions","catch","err","Error","response","message","deleteSelectedSlot","slotId","userId","services","getUserBookings","statusText","getUsers","sortedResponse","DateInfo","time","values","slotWithModals","compose","WrappedComponent","isOpen","openBooking","Modal","setAppElement","contentLabel","overlayClassName","initialValues","validationSchema","onSubmit","msg","bookSelectedSlot","htmlFor","onClick","openDetails","withModals","Toast","toastType","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","onOpen","onClose","AdminSlots","takenSlot","_id","bookingFailure","Datepicker","startDate","setStartDate","maxDate","addDays","minDate","onChange","Logout","Bookings","IconProvider","icon","Provider","value","BackArrow","history","useHistory","goBack","errorMsg","FormWrapper","title","useParams","resetForm","changeUserPassword","Object","keys","Loader","size","color","withError","withConfirm","open","setOpen","confirm","setConfirm","deleteUserBookingFailure","getUsersBookings","deleteUsersBooking","requestFromBoardSlot","slotWithConfirm","Slots","loggedUser","slot","BookButton","bookingWithError","BookingBoard","footerData","Footer","textArray","Front","tiles","Tile","animate","arrow","Instruction","setAnimate","scroll","window","addEventListener","scrollY","removeEventListener","Home","signIn","password","signUp","passwordChange","SignIn","setItem","errors","SignUp","setSubmitting","registerUser","deleteWithConfirm","User","Header","Information","colSpan","rowWithConfirm","userTableWithError","index","UserBookings","UserDetails","getUser","slice","Row","block","setBlock","handleBlockStatus","alert","UsersTable","UserSearch","placeholder","Pagination","currentPage","setCurrentPage","pages","array","indexDown","indexUp","getPages","Array","UsersSearch","setPages","usersToDisplay","setUsersToDisplay","Math","ceil","companieSlice","Routes","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f12c89bd.chunk.js","sourcesContent":["import * as types from \"./userTypes\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  logged: false,\r\n  id: null,\r\n  isAdmin: false,\r\n  name: null,\r\n  token: null,\r\n  user: {},\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.LOGIN:\r\n      return { ...state, loading: true };\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        id: payload.id,\r\n        name: payload.name,\r\n        isAdmin: payload.admin,\r\n        loading: false,\r\n        logged: true\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    case types.CHANGE_PASSWORD:\r\n      return { ...state, loading: true };\r\n    case types.CHANGE_PASSWORD_SUCCESS:\r\n      return { ...state, loading: false, error: null };\r\n    case types.CHANGE_PASSWORD_FAILURE:\r\n      return { ...state, loading: false, error: payload.error };\r\n    case types.LOGOUT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        user: {},\r\n        logged: false,\r\n        loading: false,\r\n        id: null,\r\n        name: null,\r\n        token: null,\r\n        isAdmin: false\r\n      };\r\n\r\n    case types.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","export const LOGIN = \"LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\r\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\r\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as types from \"./boardTypes\";\r\n\r\nconst initialState = {\r\n  date: null,\r\n  error: null,\r\n  loading: false,\r\n  takenSlots: [],\r\n  selectedSlot: {},\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.SET_DATE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        date: payload.date,\r\n      };\r\n    case types.GET_SLOTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n        takenSlots: null,\r\n      };\r\n    case types.GET_SLOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        takenSlots: payload.takenSlots,\r\n      };\r\n    case types.SELECT_SLOT:\r\n      return {\r\n        ...state,\r\n        selectedSlot: payload.slotNumber,\r\n      };\r\n    case types.RESET_BOOKINGS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        takenSlots: [],\r\n        selectedSlot: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","export const SET_DATE = \"SET_DATE\";\r\nexport const GET_SLOTS_FAILURE = \"GET_SLOTS_FAILURE\";\r\nexport const GET_SLOTS_SUCCESS = \"GET_SLOTS_SUCCESS\";\r\nexport const RESET_BOOKINGS = \"RESET_BOOKINGS\";\r\nexport const SELECT_SLOT = \"SELECT_SLOT\";\r\n","import * as types from \"./bookingTypes\";\r\n\r\nconst initialState = {\r\n  bookedSlot: null,\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case types.START_BOOKING:\r\n      return { ...state, loading: true };\r\n    case types.BOOKING_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    case types.BOOKING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        bookedSlot: payload.bookedSlot,\r\n        loading: false,\r\n      };\r\n    case types.RESET_BOOKING:\r\n      return { ...state, bookedSlot: null, error: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","export const START_BOOKING = \"START_BOOKING\";\r\nexport const BOOKING_FAILURE = \"BOOKING_FAILURE\";\r\nexport const BOOKING_SUCCESS = \"BOOKING_SUCCESS\";\r\nexport const RESET_BOOKING = \"RESET_BOOKING\";\r\n","import * as types from \"./userBookingsTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: false,\r\n  userBookings: []\r\n};\r\n\r\nconst userBookingsReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case types.FETCH_BOOKINGS:\r\n      return { ...state, error: false, loading: true, userBookings: [] };\r\n    case types.FETCH_BOOKINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        userBookings: payload.userBookings\r\n      };\r\n    case types.FETCH_BOOKINGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n        userBookings: []\r\n      };\r\n    case types.DELETE_BOOKING:\r\n      return { ...state, error: false, loading: true };\r\n    case types.DELETE_BOOKING_SUCCESS:\r\n      return { ...state, error: false, loading: false };\r\n    case types.DELETE_BOOKING_FAILURE:\r\n      return { ...state, error: payload.error, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userBookingsReducer;\r\n","export const FETCH_BOOKINGS = \"FETCH_BOOKINGS\";\r\nexport const FETCH_BOOKINGS_SUCCESS = \"FETCH_BOOKINGS_SUCCESS\";\r\nexport const FETCH_BOOKINGS_FAILURE = \"FETCH_BOOKINGS_FAILURE\";\r\nexport const DELETE_BOOKING = \"DELETE_BOOKING\";\r\nexport const DELETE_BOOKING_SUCCESS = \"DELETE_BOOKING_SUCCESS\";\r\nexport const DELETE_BOOKING_FAILURE = \"DELETE_BOOKING_FAILURE\";\r\n","import * as types from \"./toastTypes\";\r\n\r\nconst initialState = {\r\n  toastActive: false,\r\n  type: undefined\r\n};\r\n\r\nconst toastReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.ENABLE_TOAST:\r\n      return { ...state, type: payload.type };\r\n    case types.ACTIVE_TOAST:\r\n      return { ...state, toastActive: true };\r\n    case types.DISABLE_TOAST:\r\n      return { toastActive: false, type: undefined };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toastReducer;\r\n","export const ENABLE_TOAST = \"ENABLE_TOAST\";\r\nexport const DISABLE_TOAST = \"DISABLE_TOAST\";\r\nexport const ACTIVE_TOAST = \"ACTIVE_TOAST\";\r\n","import * as types from \"./adminTypes\";\r\n\r\nconst initialState = {\r\n  choosedSlot: {},\r\n  error: null,\r\n  details: {},\r\n  loading: false,\r\n  user: [],\r\n  userBookings: [],\r\n  users: [],\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.BOOK_SLOT_START ||\r\n      types.DELETE_SLOT_START ||\r\n      types.GET_DETAILS_START ||\r\n      types.GET_USERS_START ||\r\n      types.GET_USER_START ||\r\n      types.GET_BOOKINGS_START ||\r\n      types.CHANGE_PASSWORD_START ||\r\n      types.HANDLE_BLOCK_START:\r\n      return { ...state, loading: true, error: null };\r\n    case types.BOOK_SLOT_FAILURE ||\r\n      types.DELETE_SLOT_FAILURE ||\r\n      types.GET_DETAILS_FAILURE ||\r\n      types.GET_USERS_FAILURE ||\r\n      types.GET_USER_FAILURE ||\r\n      types.GET_BOOKINGS_FAILURE ||\r\n      types.CHANGE_PASSWORD_FAILURE ||\r\n      types.HANDLE_BLOCK_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n        loading: false,\r\n      };\r\n    case types.BOOK_SLOT_SUCCESS ||\r\n      types.DELETE_SLOT_SUCCESS ||\r\n      types.CHANGE_PASSWORD_SUCCESS ||\r\n      types.HANDLE_BLOCK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        details: { ...payload },\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload.users,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.GET_BOOKINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userBookings: payload.userBookings,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case types.CHOOSE_SLOT:\r\n      return { ...state, choosedSlot: { ...payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","export const BOOK_SLOT_START = \"BOOK_SLOT_START\";\r\nexport const BOOK_SLOT_FAILURE = \"BOOK_SLOT_FAILURE\";\r\nexport const BOOK_SLOT_SUCCESS = \"BOOK_SLOT_SUCCESS\";\r\n\r\nexport const CHOOSE_SLOT = \"CHOOSE_SLOT\";\r\n\r\nexport const CHANGE_PASSWORD_START = \"CHANGE_PASSWORD_START\";\r\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\";\r\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\r\n\r\nexport const DELETE_SLOT_START = \"DELETE_SLOT_START\";\r\nexport const DELETE_SLOT_FAILURE = \"DELETE_SLOT_FAILURE\";\r\nexport const DELETE_SLOT_SUCCESS = \"DELETE_SLOT_SUCCESS\";\r\n\r\nexport const GET_DETAILS_START = \"GET_DETAILS_START\";\r\nexport const GET_DETAILS_FAILURE = \"GET_DETAILS_FAILURE\";\r\nexport const GET_DETAILS_SUCCESS = \"GET_DETAILS_SUCCESS\";\r\n\r\nexport const GET_USERS_START = \"GET_USERS_START\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\n\r\nexport const GET_USER_START = \"GET_USER_START\";\r\nexport const GET_USER_FAILURE = \"GET_USER_FAILURE\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\n\r\nexport const GET_BOOKINGS_START = \"GET_BOOKINGS_START\";\r\nexport const GET_BOOKINGS_FAILURE = \"GET_BOOKINGS_FAILURE\";\r\nexport const GET_BOOKINGS_SUCCESS = \" GET_BOOKINGS_SUCCESS\";\r\n\r\nexport const HANDLE_BLOCK_START = \"HANDLE_BLOCK_START\";\r\nexport const HANDLE_BLOCK_FAILURE = \"HANDLE_BLOCK_FAILURE\";\r\nexport const HANDLE_BLOCK_SUCCESS = \"HANDLE_BLOCK_SUCCESS\";\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./user/userReducer\";\r\nimport boardReducer from \"./board/boardReducer\";\r\nimport bookingReducer from \"./booking/bookingReducer\";\r\nimport userBookingReducer from \"./userBookings/userBookingsReducer\";\r\nimport toastReducer from \"./toast/toastReducer\";\r\nimport adminReducer from \"./admin/adminReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  board: boardReducer,\r\n  booking: bookingReducer,\r\n  userBookings: userBookingReducer,\r\n  toast: toastReducer,\r\n  admin: adminReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export const loggedNav = [\r\n  [\"Account\", \"/user\"],\r\n  [\"Book\", \"/booking-board\"],\r\n  [\"My Bookings\", \"/user-bookings\"],\r\n];\r\nexport const unloggedNav = [\r\n  [\"Home\", \"/\"],\r\n  [\"Sign In\", \"/sign-in\"],\r\n  [\"Sign Up\", \"/sign-up\"],\r\n];\r\nexport const adminNav = [\r\n  [\"Bookings\", \"/admin\"],\r\n  [\"Search\", \"/admin/search\"],\r\n];\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport * as data from \"./utils\";\r\n\r\nexport const NavBar = () => {\r\n  const { isAdmin, logged } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"navigation__logo\"></div>\r\n      <ul className=\"navigation__links\">\r\n        {(!logged\r\n          ? data.unloggedNav\r\n          : isAdmin\r\n          ? data.adminNav\r\n          : data.loggedNav\r\n        ).map(([text, link]) => (\r\n          <NavLink key={text} activeClassName=\"selected\" exact to={link}>\r\n            <li>{text}</li>\r\n          </NavLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import * as types from \"./userTypes\";\r\n\r\nexport const login = () => ({\r\n  type: types.LOGIN,\r\n});\r\n\r\nexport const loginSuccess = ({ token, id, name, admin }) => ({\r\n  type: types.LOGIN_SUCCESS,\r\n  payload: { token, id, name, admin },\r\n});\r\n\r\nexport const loginFailure = (error) => ({\r\n  type: types.LOGIN_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const changePassword = () => ({\r\n  type: types.CHANGE_PASSWORD,\r\n});\r\n\r\nexport const changePasswordSuccess = () => ({\r\n  type: types.CHANGE_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const changePasswordFailure = (error) => ({\r\n  type: types.CHANGE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\nexport const logout = () => ({\r\n  type: types.LOGOUT,\r\n});\r\n\r\nexport const clearErrors = () => ({\r\n  type: types.CLEAR_ERRORS,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Route as ReactRouter, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { clearErrors } from \"redux/user/userActions\";\r\n\r\nexport const Route = ({ component: Component, secured, path, ...rest }) => {\r\n  const { error, isAdmin, logged } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (error) dispatch(clearErrors());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [path]);\r\n\r\n  if (logged && !isAdmin && (path === \"/sign-in\" || path === \"/sign-up\")) {\r\n    return <Redirect to=\"/booking-board\" />;\r\n  } else if (isAdmin && logged && path === \"/sign-in\") {\r\n    return <Redirect to=\"/admin\" />;\r\n  } else if (!logged && secured) return <Redirect to=\"/sign-in\" />;\r\n\r\n  return <ReactRouter {...rest} render={(props) => <Component {...props} />} />;\r\n};\r\n","export const slots = [\r\n  { number: 1, hours: \"6.00-8.00\", lastBooking: 7 },\r\n  { number: 2, hours: \"8.00-10.00\", lastBooking: 9 },\r\n  { number: 3, hours: \"10.00-12.00\", lastBooking: 11 },\r\n  { number: 4, hours: \"12.00-14.00\", lastBooking: 13 },\r\n  { number: 5, hours: \"14.00-16.00\", lastBooking: 15 },\r\n  { number: 6, hours: \"16.00-18.00\", lastBooking: 17 },\r\n  { number: 7, hours: \"18.00-20.00\", lastBooking: 19 },\r\n  { number: 8, hours: \"20.00-22.00\", lastBooking: 21 }\r\n];\r\n","import * as types from \"./adminTypes\";\r\n\r\nexport const chooseSlot = (choosedSlot) => ({\r\n  type: types.CHOOSE_SLOT,\r\n  payload: choosedSlot,\r\n});\r\n\r\nexport const startChangePassword = () => ({\r\n  type: types.CHANGE_PASSWORD_START,\r\n});\r\n\r\nexport const changePasswordFailure = (error) => ({\r\n  type: types.CHANGE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const changePasswordSuccess = () => ({\r\n  type: types.CHANGE_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const startBookSlot = () => ({\r\n  type: types.BOOK_SLOT_START,\r\n});\r\n\r\nexport const bookSlotFailure = (error) => ({\r\n  type: types.BOOK_SLOT_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const bookSlotSuccess = () => ({\r\n  type: types.BOOK_SLOT_SUCCESS,\r\n});\r\n\r\nexport const startDeleteSlot = () => ({\r\n  type: types.DELETE_SLOT_START,\r\n});\r\n\r\nexport const deleteSlotFailure = (error) => ({\r\n  type: types.DELETE_SLOT_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteSlotSuccess = () => ({\r\n  type: types.DELETE_SLOT_SUCCESS,\r\n});\r\n\r\nexport const startGetDetails = () => ({\r\n  type: types.GET_DETAILS_START,\r\n});\r\n\r\nexport const getDetailsFailure = (error) => ({\r\n  type: types.GET_DETAILS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getDetailsSuccess = (details) => ({\r\n  type: types.GET_DETAILS_SUCCESS,\r\n  payload: { ...details },\r\n});\r\n\r\nexport const startGetUsers = () => ({\r\n  type: types.GET_USERS_START,\r\n});\r\n\r\nexport const getUsersFailure = (error) => ({\r\n  type: types.GET_USERS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUsersSuccess = (users) => ({\r\n  type: types.GET_USERS_SUCCESS,\r\n  payload: { users },\r\n});\r\n\r\nexport const startGetUser = () => ({\r\n  type: types.GET_USER_START,\r\n});\r\n\r\nexport const getUserFailure = (error) => ({\r\n  type: types.GET_USER_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUserSuccess = (user) => ({\r\n  type: types.GET_USER_SUCCESS,\r\n  payload: { user },\r\n});\r\n\r\nexport const startGetUserBookings = () => ({\r\n  type: types.GET_BOOKINGS_START,\r\n});\r\n\r\nexport const getUserBookingsFailure = (error) => ({\r\n  type: types.GET_BOOKINGS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getUserBookingsSuccess = (userBookings) => ({\r\n  type: types.GET_BOOKINGS_SUCCESS,\r\n  payload: { userBookings },\r\n});\r\n\r\nexport const startHandleBlock = () => ({\r\n  type: types.HANDLE_BLOCK_START,\r\n});\r\n\r\nexport const handleBlockSuccess = (error) => ({\r\n  type: types.HANDLE_BLOCK_SUCCESS,\r\n  payload: { error },\r\n});\r\n\r\nexport const handleBlockFailure = (userBookings) => ({\r\n  type: types.HANDLE_BLOCK_FAILURE,\r\n});\r\n","export const checkAvailability = async (date, lastBooking) => {\r\n  let available = true;\r\n  if (date) {\r\n    const today = new Date().setHours(0, 0, 0, 0);\r\n    const [day, month, year] = date.split(\"-\");\r\n    const bookDate = new Date(year, month - 1, day).setHours(0, 0, 0, 0);\r\n    if (today === bookDate && lastBooking <= new Date().getHours())\r\n      available = false;\r\n  }\r\n  return available;\r\n};\r\n\r\nexport const standarizeDate = (date) =>\r\n  `${date.getUTCDate()}-${date.getUTCMonth() + 1}-${date.getUTCFullYear()}`;\r\n\r\nexport const sortByDates = async (bookings) => {\r\n  const sortedBookings = await bookings.sort((aBooking, bBooking) => {\r\n    const [aDay, aMonth, aYear] = aBooking.date.split(\"-\");\r\n    const [bDay, bMonth, bYear] = bBooking.date.split(\"-\");\r\n    return (\r\n      new Date(bYear, bMonth - 1, bDay) - new Date(aYear, aMonth - 1, aDay)\r\n    );\r\n  });\r\n  return await removeOldDates(sortedBookings);\r\n};\r\n\r\nconst removeOldDates = async (bookings) =>\r\n  await bookings.filter((booking) => {\r\n    const [day, month, year] = booking.date.split(\"-\");\r\n    return new Date(year, month - 1, day) >= new Date().setHours(0, 0, 0, 0);\r\n  });\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { checkAvailability } from \"services/Date\";\r\n\r\nexport const useDateCheck = (taken, lastBooking, selected = false, id) => {\r\n  const [unavailable, setUnavailability] = useState(taken);\r\n  const [style, setStyle] = useState(\"\");\r\n  const date = useSelector((state) => state.board.date);\r\n\r\n  useEffect(() => {\r\n    async function check() {\r\n      if (!taken) {\r\n        let avaiability = await checkAvailability(date, lastBooking);\r\n        setUnavailability(!avaiability);\r\n      }\r\n    }\r\n    check();\r\n  }, [date, lastBooking, taken]);\r\n\r\n  useEffect(() => {\r\n    unavailable\r\n      ? setStyle(\"--taken\")\r\n      : selected\r\n      ? setStyle(\"--available--selected\")\r\n      : id\r\n      ? setStyle(\"--available user\")\r\n      : setStyle(\"--available\");\r\n  }, [id, selected, unavailable]);\r\n\r\n  return [unavailable, style];\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const registrationSchema = Yup.object().shape({\r\n  Nickname: Yup.string()\r\n    .max(15, \"Must be 15 characters or less\")\r\n    .required(\"Required\"),\r\n  Email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n  Password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  Repassword: Yup.string().when(\"Password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"Password\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const loginSchema = Yup.object().shape({\r\n  Nickname: Yup.string().required(\"Required\"),\r\n  Password: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const nicknameSchema = Yup.object().shape({\r\n  Nickname: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const changePasswordSchema = Yup.object().shape({\r\n  Password: Yup.string().required(\"Required\"),\r\n  newPassword: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  newPasswordConfirm: Yup.string().when(\"newPassword\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const adminChangePasswordSchema = Yup.object().shape({\r\n  newPassword: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  newPasswordConfirm: Yup.string().when(\"newPassword\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: \"https://laundry-dorn.herokuapp.com/\",\r\n  timeout: 1000,\r\n  headers: { \"content-type\": \"application/json\" },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n    if (!config.headers.Authorization) {\r\n      const token = await localStorage.token;\r\n      if (token) {\r\n        config.headers.Authorization = token;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const bookSlot = async (data) =>\r\n  await axiosInstance.post(\"/admin/book\", data);\r\n\r\nexport const changePassword = async (id, newPassword) =>\r\n  await axiosInstance.post(\"admin/user-password\", {\r\n    id,\r\n    newPassword,\r\n  });\r\n\r\nexport const deleteSlot = async (id) =>\r\n  await axiosInstance.delete(`/admin/delete/${id}`);\r\n\r\nexport const fetchDetails = async (id) =>\r\n  await axiosInstance.get(`/admin/booking/${id}`);\r\n\r\nexport const fetchUsers = async (name) =>\r\n  await axiosInstance.get(\"/admin/users\", { params: { name } });\r\n\r\nexport const fetchUser = async (id) =>\r\n  await axiosInstance.get(\"/admin/user\", { params: { id } });\r\n\r\nexport const fetchUserBookings = async (id) =>\r\n  await axiosInstance.get(\"/admin/user-bookings\", { params: { id } });\r\n\r\nexport const handleBlock = async (id, isBlocked) =>\r\n  await axiosInstance.post(`admin/user-${isBlocked ? \"unblock\" : \"block\"}`, {\r\n    id,\r\n  });\r\n","import * as types from \"./toastTypes\";\r\n\r\nexport const enableToast = (type) => ({\r\n  type: types.ENABLE_TOAST,\r\n  payload: { type },\r\n});\r\n\r\nexport const activateToast = () => ({\r\n  type: types.ACTIVE_TOAST,\r\n});\r\n\r\nexport const resetToast = () => ({\r\n  type: types.DISABLE_TOAST,\r\n});\r\n","import * as types from \"./boardTypes\";\r\n\r\nexport const setDate = (date) => ({\r\n  type: types.SET_DATE,\r\n  payload: { date },\r\n});\r\n\r\nexport const getSlotsFailure = (error) => ({\r\n  type: types.GET_SLOTS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const getSlotsSuccess = (takenSlots) => ({\r\n  type: types.GET_SLOTS_SUCCESS,\r\n  payload: { takenSlots },\r\n});\r\n\r\nexport const resetBookings = () => ({\r\n  type: types.RESET_BOOKINGS,\r\n});\r\n\r\nexport const selectSlot = (slotNumber) => ({\r\n  type: types.SELECT_SLOT,\r\n  payload: { slotNumber },\r\n});\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const bookSlot = async (date, { number, hours }) =>\r\n  await axiosInstance.post(\"/booking/\", { date, number, hours });\r\n\r\nexport const deleteSlot = async (date, id) =>\r\n  await axiosInstance.delete(`/booking/${date}/${id}`);\r\n\r\nexport const fetchBookings = async (date) =>\r\n  axiosInstance.get(`/booking/${date}`);\r\n\r\nexport const fetchUserBookings = async () =>\r\n  await axiosInstance.get(\"/booking/user-bookings\");\r\n","import * as actions from \"./boardActions\";\r\n\r\nimport { standarizeDate } from \"services/Date\";\r\nimport { fetchBookings } from \"services/Booking\";\r\n\r\nexport const fetchDate = (date, standarized = false) => async (dispatch) => {\r\n  try {\r\n    if (!standarized) date = await standarizeDate(date);\r\n    await dispatch(actions.setDate(date));\r\n    const response = await fetchBookings(date).catch((err) => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getSlotsSuccess(response.data.slots));\r\n  } catch (error) {\r\n    dispatch(actions.getSlotsFailure(error.message));\r\n  }\r\n};\r\n","import * as actions from \"./adminActions\";\r\n\r\nimport * as services from \"services/Admin\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\nimport { fetchDate } from \"../board/boardUtils\";\r\nimport { sortByDates } from \"services/Date\";\r\n\r\nexport const bookSelectedSlot = (name, date, number, hours) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.startBookSlot());\r\n    const response = await services.bookSlot({ name, date, number, hours });\r\n    dispatch(actions.bookSlotSuccess(response.data));\r\n    dispatch(enableToast(\"BOOK\"));\r\n    dispatch(fetchDate(date, true));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.bookSlotFailure(error.response.data.msg));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    } else {\r\n      dispatch(actions.bookSlotFailure(\"Internal server error\"));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeUserPassword = (id, newPassword) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.startChangePassword());\r\n    await services.changePassword(id, newPassword);\r\n    dispatch(actions.changePasswordSuccess());\r\n    dispatch(enableToast(\"CHANGE\"));\r\n  } catch (error) {\r\n    dispatch(actions.changePasswordFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteSelectedSlot = (date, slotId, isAdmin, userId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.startDeleteSlot());\r\n    await services.deleteSlot(slotId);\r\n    dispatch(actions.deleteSlotSuccess());\r\n    dispatch(enableToast(\"DELETE\"));\r\n    return isAdmin\r\n      ? dispatch(getUserBookings(userId))\r\n      : dispatch(fetchDate(date, true));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteSlotFailure(error.response.statusText));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    } else {\r\n      dispatch(actions.deleteSlotFailure(\"Internal server error\"));\r\n      dispatch(enableToast(\"ERROR\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getDetails = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetDetails());\r\n    const response = await services.fetchDetails(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getDetailsSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getDetailsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUsers = (name = \"\") => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUsers());\r\n    const response = await services.fetchUsers(name).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getUsersSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getUsersFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUser());\r\n    const response = await services.fetchUser(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    dispatch(actions.getUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const getUserBookings = (id) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startGetUserBookings());\r\n    const response = await services.fetchUserBookings(id).catch(() => {\r\n      throw new Error(\"Internal Server Error\");\r\n    });\r\n    const sortedResponse = await sortByDates(response.data);\r\n    dispatch(actions.getUserBookingsSuccess(sortedResponse));\r\n  } catch (error) {\r\n    dispatch(actions.getUserBookingsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const handleBlockStatus = (id, isBlocked) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.startHandleBlock());\r\n    await services.handleBlock(id, isBlocked);\r\n    await dispatch(actions.handleBlockSuccess());\r\n  } catch (error) {\r\n    dispatch(actions.handleBlockFailure(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DateInfo = ({ date, text, time }) => (\r\n  <>\r\n    <h2>{text}</h2>\r\n    <div className=\"modal__basics\">\r\n      <div className=\"modal__date\">\r\n        <p>\r\n          <span>Date:</span> {date}\r\n        </p>\r\n      </div>\r\n      <div className=\"modal__time\">\r\n        <p>\r\n          <span>Time:</span> {time}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { nicknameSchema } from \"services/validation\";\r\nimport { bookSelectedSlot } from \"redux/admin/adminUtils\";\r\nimport { DateInfo } from \"../DateInfo\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n};\r\n\r\nexport const withBookingModal = (WrappedComponent) => ({ ...props }) => {\r\n  const [isOpen, openBooking] = useState(false);\r\n  const date = useSelector((store) => store.board.date);\r\n  const { hours, number } = useSelector((store) => store.admin.choosedSlot);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    Modal.setAppElement(\"#root\");\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal\r\n          isOpen={isOpen}\r\n          contentLabel=\"Booking\"\r\n          className=\"modal modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <DateInfo text={\"Book Slot\"} time={hours} date={date} />\r\n          <Formik\r\n            initialValues={values}\r\n            validationSchema={nicknameSchema}\r\n            onSubmit={({ Nickname }) => {\r\n              dispatch(bookSelectedSlot(Nickname, date, number, hours));\r\n              openBooking(false);\r\n            }}\r\n          >\r\n            <Form>\r\n              <div key={\"Nickname\"} className=\"modal__input\">\r\n                <label htmlFor={\"Nickname\"}>User Nickname</label>\r\n                <Field name={\"Nickname\"} type=\"text\" />\r\n                <ErrorMessage name={\"Nickname\"}>\r\n                  {(msg) => (\r\n                    <div className=\"form__error modal__error\">{msg}</div>\r\n                  )}\r\n                </ErrorMessage>\r\n              </div>\r\n              <div className=\"modal__buttons\">\r\n                <button className=\"form__button\" type=\"submit\">\r\n                  BOOK\r\n                </button>\r\n                <button\r\n                  className=\"form__button\"\r\n                  onClick={() => openBooking(false)}\r\n                >\r\n                  CLOSE\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </Formik>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent {...props} openBooking={openBooking} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { chooseSlot } from \"redux/admin/adminActions\";\r\nimport { useDateCheck } from \"custom-hooks\";\r\nimport { withBookingModal } from \"../../withBookingModal\";\r\nimport { withDetailsModal } from \"../../withDetailsModal\";\r\n\r\nconst AdminSlot = ({\r\n  props: {\r\n    hours,\r\n    lastBooking,\r\n    number,\r\n    openBooking,\r\n    openDetails,\r\n    slotId,\r\n    taken,\r\n  },\r\n}) => {\r\n  let [unavailable, style] = useDateCheck(taken, lastBooking, false, slotId);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={`booking__slot booking__slot${style}`}>\r\n      <h2>{hours}</h2>\r\n      {unavailable ? (\r\n        <p>Unavailable</p>\r\n      ) : (\r\n        <>\r\n          <p>{slotId ? \"Taken\" : \"Available\"}</p>\r\n          <button\r\n            onClick={() => {\r\n              slotId ? openDetails(true) : openBooking(true);\r\n              dispatch(chooseSlot({ slotId, hours, number }));\r\n            }}\r\n          >\r\n            {slotId ? \"DETAILS\" : \"BOOK\"}\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst withModals = compose(withBookingModal, withDetailsModal);\r\nconst slotWithModals = withModals(AdminSlot);\r\nexport { slotWithModals as Slot };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { DateInfo } from \"../DateInfo\";\r\n\r\nimport { deleteSelectedSlot, getDetails } from \"redux/admin/adminUtils\";\r\n\r\nexport const withDetailsModal = (WrappedComponent) => ({\r\n  props: { ...props },\r\n  openBooking,\r\n}) => {\r\n  const [isOpen, openDetails] = useState(false);\r\n  const date = useSelector((store) => store.board.date);\r\n  const {\r\n    choosedSlot: { hours },\r\n    details: { user },\r\n  } = useSelector((store) => store.admin);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Modal.setAppElement(\"#root\");\r\n      dispatch(getDetails(props.slotId));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Modal\r\n          isOpen={isOpen}\r\n          contentLabel=\"Details\"\r\n          className=\"modal details-modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <DateInfo text={\"Booking Details\"} date={date} time={hours} />\r\n          <div className=\"modal__user\">\r\n            <p>User</p>\r\n            <p>\r\n              <span>{user}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button\r\n              onClick={() => {\r\n                dispatch(deleteSelectedSlot(date, props.slotId));\r\n                openDetails(false);\r\n              }}\r\n            >\r\n              DELETE\r\n            </button>\r\n            <button onClick={() => openDetails(false)}>CLOSE</button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent props={{ openBooking, openDetails, ...props }} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { activateToast, resetToast } from \"redux/toast/toastActions\";\r\n\r\nexport const Toast = ({ text, toastType }) => {\r\n  const { toastActive, type } = useSelector(({ toast }) => toast);\r\n  const dispatch = useDispatch();\r\n\r\n  const notify = () => {\r\n    toast.warn(text, {\r\n      position: \"top-right\",\r\n      autoClose: true,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      onOpen: () => dispatch(activateToast()),\r\n      onClose: () => dispatch(resetToast()),\r\n    });\r\n  };\r\n  return <>{!toastActive && toastType === type ? notify() : null}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { slots } from \"utils/slots\";\r\n\r\nimport { Slot } from \"./Slot\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nexport const AdminSlots = () => {\r\n  const error = useSelector((state) => state.admin.error);\r\n  const takenSlots = useSelector((state) => state.board.takenSlots);\r\n\r\n  const renderSlots = () =>\r\n    slots.map(({ number, ...props }) => {\r\n      let taken = takenSlots.filter((takenSlot) => number === takenSlot.number);\r\n      return taken.length ? (\r\n        <Slot\r\n          key={number}\r\n          props={{ number, slotId: taken[0]._id, taken, ...props }}\r\n        />\r\n      ) : (\r\n        <Slot key={number} props={{ number, ...props }} />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"booking__slots\">\r\n      {renderSlots()}\r\n      <Toast text={\"Slot booked\"} toastType=\"BOOK\" />\r\n      <Toast text={\"Slot deleted\"} toastType=\"DELETE\" />\r\n      <Toast text={error} toastType={\"ERROR\"} />\r\n    </div>\r\n  );\r\n};\r\n","import * as types from \"./bookingTypes\";\r\n\r\nexport const startBooking = () => ({\r\n  type: types.START_BOOKING,\r\n});\r\n\r\nexport const bookingSuccess = (bookedSlot) => ({\r\n  type: types.BOOKING_SUCCESS,\r\n  payload: { bookedSlot },\r\n});\r\n\r\nexport const bookingFailure = (error) => ({\r\n  type: types.BOOKING_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const resetCurrentBooking = () => ({\r\n  type: types.RESET_BOOKING,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { addDays } from \"date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchDate } from \"redux/board/boardUtils\";\r\nimport { resetBookings } from \"redux/board/boardActions\";\r\nimport { resetCurrentBooking } from \"redux/booking/bookingActions\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const Datepicker = ({ name }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const bookedSlot = useSelector((state) => state.booking.bookedSlot);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetBookings());\r\n    dispatch(resetCurrentBooking());\r\n    dispatch(fetchDate(startDate));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [startDate, bookedSlot]);\r\n\r\n  return (\r\n    <div className={`${name}__datepicker`}>\r\n      <DatePicker\r\n        maxDate={addDays(new Date(), 7)}\r\n        minDate={new Date()}\r\n        onChange={(date) => setStartDate(date)}\r\n        selected={startDate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logout } from \"redux/user/userActions\";\r\n\r\nexport const Logout = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <button className=\"logout\" onClick={() => dispatch(logout())}>\r\n      LOGOUT\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { AdminSlots } from \"components/adminComponents/AdminSlots\";\r\nimport { Datepicker } from \"components/Datepicker\";\r\nimport { Logout } from \"components/Logout\";\r\n\r\nexport const Bookings = () => (\r\n  <div className=\"bookings\">\r\n    <Datepicker name=\"bookings\" />\r\n    <AdminSlots />\r\n    <Logout />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport const IconProvider = ({ icon, name }) => (\r\n  <IconContext.Provider value={{ className: name }}>\r\n    {icon}\r\n  </IconContext.Provider>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const BackArrow = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <div className=\"back-arrow\" onClick={() => history.goBack()}>\r\n      <IconProvider icon={<MdArrowBack />} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Error = ({ errorMsg, name, icon }) => (\r\n  <div className={`${name} error`}>\r\n    {icon && <IconProvider icon={<MdError />} name={`${name} error__icon`} />}\r\n    <p>{errorMsg}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Error } from \"components/Error\";\r\n\r\nexport const FormWrapper = ({ action, title, render }) => {\r\n  const error = useSelector((state) => state.user.error);\r\n  return (\r\n    <div className=\"form__wrapper\">\r\n      {error && <Error name=\"form__error main\" errorMsg={error} />}\r\n      <h2>{title}</h2>\r\n      {render()}\r\n      <button className=\"form__button\" type=\"submit\">\r\n        {action}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\n\r\nimport { adminChangePasswordSchema } from \"services/validation\";\r\nimport { changeUserPassword } from \"redux/admin/adminUtils\";\r\n\r\nimport { BackArrow } from \"components/BackArrow\";\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nconst values = {\r\n  newPassword: \"\",\r\n  newPasswordConfirm: \"\",\r\n};\r\n\r\nexport const Password = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"password\">\r\n      <BackArrow />\r\n      <Toast text={\"Password Changed\"} toastType={\"CHANGE\"} />\r\n      <Formik\r\n        initialValues={values}\r\n        validationSchema={adminChangePasswordSchema}\r\n        onSubmit={({ newPassword }, { resetForm }) => {\r\n          resetForm({});\r\n          dispatch(changeUserPassword(id, newPassword));\r\n        }}\r\n      >\r\n        <Form className=\"password__form\">\r\n          <FormWrapper\r\n            title={\"Change Password\"}\r\n            action={\"CHANGE\"}\r\n            render={() =>\r\n              Object.keys(values).map((value) => (\r\n                <div key={value} className=\"form__input\">\r\n                  <label htmlFor={value}>\r\n                    {value === \"newPassword\"\r\n                      ? \"New Password\"\r\n                      : \"Confirm New Password\"}\r\n                  </label>\r\n                  <Field name={value} type=\"Password\" />\r\n                  <ErrorMessage name={value}>\r\n                    {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              ))\r\n            }\r\n          />\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Error = () => {\r\n  const { error } = useSelector((state) => state.booking);\r\n\r\n  return (\r\n    error && (\r\n      <div className=\"booking__wrapper\">\r\n        <div className=\"booking__error\">{error}</div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <FadeLoader size={55} color={\"#b82601\"} loading={true} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Loader } from \"components/Loader\";\r\nimport { Error } from \"components/Error\";\r\n\r\nexport const withError = (WrappedComponent) => ({\r\n  error,\r\n  loading,\r\n  ...props\r\n}) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Error\r\n      errorMsg={\"Ooops... Something went wrong. Try again later.\"}\r\n      name={\"main\"}\r\n      icon={true}\r\n    />\r\n  ) : (\r\n    <WrappedComponent {...props} />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nexport const withConfirm = (WrappedComponent) => ({ ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open) Modal.setAppElement(\"#root\");\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <Modal\r\n          isOpen={open}\r\n          contentLabel=\"Confirmation\"\r\n          className=\"modal\"\r\n          overlayClassName=\"overlay\"\r\n        >\r\n          <h2>Are you sure?</h2>\r\n          <button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              setConfirm(true);\r\n            }}\r\n          >\r\n            YES\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setOpen(false);\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            NO\r\n          </button>\r\n        </Modal>\r\n      )}\r\n      <WrappedComponent {...props} setOpen={setOpen} confirm={confirm} />\r\n    </>\r\n  );\r\n};\r\n","import * as types from \"./userBookingsTypes\";\r\n\r\nexport const fetchUserBookings = () => ({\r\n  type: types.FETCH_BOOKINGS,\r\n});\r\n\r\nexport const fetchUserBookingsSuccess = (userBookings) => ({\r\n  type: types.FETCH_BOOKINGS_SUCCESS,\r\n  payload: { userBookings },\r\n});\r\n\r\nexport const fetchUserBookingsFailure = (error) => ({\r\n  type: types.FETCH_BOOKINGS_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteUserBooking = () => ({\r\n  type: types.DELETE_BOOKING,\r\n});\r\n\r\nexport const deleteUserBookingSuccess = () => ({\r\n  type: types.DELETE_BOOKING_SUCCESS,\r\n});\r\n\r\nexport const deleteUserBookingFailure = (error) => ({\r\n  type: types.DELETE_BOOKING_FAILURE,\r\n  payload: { error },\r\n});\r\n","import * as actions from \"./userBookingsActions\";\r\n\r\nimport { fetchUserBookings, deleteSlot } from \"services/Booking\";\r\nimport { sortByDates } from \"services/Date\";\r\nimport { fetchDate } from \"../board/boardUtils\";\r\nimport { enableToast } from \"../toast/toastActions\";\r\n\r\nexport const getUsersBookings = () => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.fetchUserBookings());\r\n    const response = await fetchUserBookings();\r\n    let sortedResponse = await sortByDates(response.data);\r\n    dispatch(actions.fetchUserBookingsSuccess(sortedResponse));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteUserBookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.deleteUserBookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUsersBooking = (\r\n  date,\r\n  id,\r\n  requestFromBoardSlot = false\r\n) => async (dispatch) => {\r\n  try {\r\n    await dispatch(actions.deleteUserBooking());\r\n    await deleteSlot(date, id);\r\n    await dispatch(actions.deleteUserBookingSuccess());\r\n    if (requestFromBoardSlot) {\r\n      await dispatch(enableToast(\"CANCEL\"));\r\n      dispatch(fetchDate(date, true));\r\n    } else {\r\n      dispatch(getUsersBookings());\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.deleteUserBookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.deleteUserBookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { selectSlot } from \"redux/board/boardActions\";\r\nimport { useDateCheck } from \"custom-hooks\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nimport { deleteUsersBooking } from \"redux/userBookings/userBookingsUtils\";\r\n\r\nconst Slot = ({\r\n  confirm,\r\n  props: { hours, id, lastBooking, number },\r\n  selected,\r\n  setOpen,\r\n  taken,\r\n}) => {\r\n  let [unavailable, style] = useDateCheck(taken, lastBooking, selected);\r\n  const date = useSelector((state) => state.board.date);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (confirm) dispatch(deleteUsersBooking(date, id, true));\r\n  }, [confirm, date, dispatch, id, number]);\r\n\r\n  return (\r\n    <div className={`booking__slot booking__slot${style}`}>\r\n      <h2>{hours}</h2>\r\n      {unavailable && !id && <h2>Unavailable</h2>}\r\n      {id && (\r\n        <>\r\n          <h2 className=\"booking__slot__info\">Your Booking</h2>\r\n          <button onClick={() => setOpen(true)}>Cancel</button>\r\n        </>\r\n      )}\r\n      {!unavailable && (\r\n        <button onClick={() => dispatch(selectSlot({ number, hours }))}>\r\n          SELECT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst slotWithConfirm = withConfirm(Slot);\r\nexport { slotWithConfirm as Slot };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Slot } from \"../Slot\";\r\n\r\nimport { slots } from \"utils/slots\";\r\n\r\nexport const Slots = () => {\r\n  const { selectedSlot, takenSlots } = useSelector((state) => state.board);\r\n  const loggedUser = useSelector((state) => state.user.id);\r\n\r\n  const renderSlots = () =>\r\n    slots.map(({ number, ...props }) => {\r\n      const takenSlot = takenSlots.filter((slot) => number === slot.number);\r\n      if (takenSlot.length) {\r\n        const id = takenSlot[0].user === loggedUser ? takenSlot[0]._id : null;\r\n        return <Slot key={number} taken props={{ id, number, ...props }} />;\r\n      }\r\n\r\n      return selectedSlot.number === number ? (\r\n        <Slot key={number} selected props={{ number, ...props }} />\r\n      ) : (\r\n        <Slot key={number} props={{ number, ...props }} />\r\n      );\r\n    });\r\n\r\n  return <div className=\"booking__slots\">{renderSlots()}</div>;\r\n};\r\n","import * as actions from \"./bookingActions\";\r\n\r\nimport { bookSlot } from \"services/Booking\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\n\r\nexport const bookSelectedSlot = (date, selectedSlot) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.startBooking());\r\n    const response = await bookSlot(date, selectedSlot);\r\n    dispatch(actions.bookingSuccess(response.data));\r\n    dispatch(enableToast(\"BOOK\"));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.bookingFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.bookingFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { bookSelectedSlot } from \"redux/booking/bookingUtils\";\r\nimport { bookingFailure } from \"redux/booking/bookingActions\";\r\n\r\nexport const BookButton = () => {\r\n  const { date, selectedSlot } = useSelector((state) => state.board);\r\n  const dispatch = useDispatch();\r\n\r\n  const bookSlot = async () => {\r\n    if (!selectedSlot)\r\n      return dispatch(bookingFailure(\"You have to select slot before book...\"));\r\n    dispatch(bookSelectedSlot(date, selectedSlot));\r\n  };\r\n\r\n  return (\r\n    <button className=\"booking__button\" onClick={() => bookSlot()}>\r\n      BOOK\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Error } from \"./Error\";\r\nimport { withError } from \"HOC/withError\";\r\nimport { Slots } from \"./Slots\";\r\nimport { Toast } from \"components/Toast\";\r\nimport { BookButton } from \"./BookButton\";\r\n\r\nconst Booking = () => (\r\n  <div className=\"booking\">\r\n    <Slots />\r\n    <BookButton />\r\n    <Error />\r\n    <Toast text={\"Slot booked\"} toastType=\"BOOK\" />\r\n    <Toast text={\"Booking canceled\"} toastType={\"CANCEL\"} />\r\n  </div>\r\n);\r\n\r\nconst bookingWithError = withError(Booking);\r\nexport { bookingWithError as Booking };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Booking } from \"components/Booking\";\r\nimport { Datepicker } from \"components/Datepicker\";\r\nimport { Logout } from \"components/Logout\";\r\n\r\nexport const BookingBoard = () => {\r\n  const { error, loading } = useSelector((state) => state.board);\r\n  return (\r\n    <div className=\"booking-board__wrapper\">\r\n      <Datepicker name=\"booking-board\" />\r\n      <Booking error={error} loading={loading} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { MdPhone } from \"react-icons/md\";\r\n\r\nexport const footerData = [\r\n  [<GoLocation />, [\"21 Kamienna Street\", \"Warsaw, Poland\"]],\r\n  [<MdEmail />, [\"laundry_dorn@gmail.com\"]],\r\n  [<MdPhone />, [\"+48 888 436 493\"]],\r\n];\r\n","import React from \"react\";\r\n\r\nimport { footerData } from \"./utils\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"footer__wrapper\">\r\n      {footerData.map(([icon, textArray]) => (\r\n        <div key={textArray[0]} className=\"container\">\r\n          <IconProvider name={\"container__icon\"} icon={icon} />\r\n          <div className=\"container__text\">\r\n            {textArray.map((text) => (\r\n              <p key={text}>{text}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Front = () => (\r\n  <div className=\"homepage__front\">\r\n    <div className=\"homepage__welcome\">\r\n      <h2>Welcome at</h2>\r\n      <h1 className=\"homepage__header\">\r\n        Student <span>Dorm</span> Laundry\r\n      </h1>\r\n    </div>\r\n    <div className=\"homepage__buttons\">\r\n      <Link to=\"/sign-in\">\r\n        <button className=\"button__signin\">SIGN IN</button>\r\n      </Link>\r\n      <Link to=\"/sign-up\">\r\n        <button className=\"button__signup\">SIGN UP</button>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { MdCreate } from \"react-icons/md\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport { GoCalendar } from \"react-icons/go\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { GiClothespin } from \"react-icons/gi\";\r\n\r\nexport const tiles = [\r\n  [<MdCreate />, \"Create Account\", true],\r\n  [<FiLogIn />, \"Sign In\", true],\r\n  [<GoCalendar />, \"Choose Date\", true],\r\n  [<FaCheckCircle />, \"Book\", true],\r\n  [<GiClothespin />, \"Do Laundry!\", false],\r\n];\r\n","import React from \"react\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\n\r\nimport { IconProvider } from \"components/IconProvider\";\r\n\r\nexport const Tile = ({ props: [animate, icon, text, arrow] }) => (\r\n  <>\r\n    <div className={`homepage__tile ${animate}`}>\r\n      <div className=\"homepage__tile__wrapper--top\">\r\n        <IconProvider icon={icon} name={\"homepage__tile__icon\"} />\r\n      </div>\r\n      <div className=\"homepage__tile__wrapper\">\r\n        <h3>{text}</h3>\r\n      </div>\r\n    </div>\r\n    {arrow && (\r\n      <IconProvider\r\n        icon={<FaArrowRight />}\r\n        name={`homepage__tile__arrow ${animate}`}\r\n      />\r\n    )}\r\n  </>\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { tiles } from \"./utils\";\r\n\r\nimport { Tile } from \"components/Tile\";\r\n\r\nexport const Instruction = () => {\r\n  const [animate, setAnimate] = useState();\r\n  useEffect(() => {\r\n    let scroll = window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 500) setAnimate(\"animate\");\r\n    });\r\n    return () => window.removeEventListener(\"scroll\", scroll);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage__instruction\">\r\n      <div className=\"homepage__instruction--header\">\r\n        <h2>\r\n          <span>How it Works?</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"homepage__tiles\">\r\n        {tiles.map((props) => (\r\n          <Tile key={props[1]} props={[animate, ...props]} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Footer } from \"components/Footer\";\r\nimport { Front } from \"components/Front\";\r\nimport { Instruction } from \"components/Instruction\";\r\n\r\nexport const Home = () => (\r\n  <div className=\"homepage\">\r\n    <Front />\r\n    <Instruction />\r\n    <Footer />\r\n  </div>\r\n);\r\n","import { axiosInstance } from \"./Axios\";\r\n\r\nexport const deleteAccount = async () => axiosInstance.delete(`/user`);\r\n\r\nexport const signIn = async (name, password) =>\r\n  axiosInstance.post(\"/user/login\", { name, password });\r\n\r\nexport const signUp = async (name, password, email) =>\r\n  axiosInstance.post(\"/user/create\", { name, email, password });\r\n\r\nexport const passwordChange = async (password, newPassword) =>\r\n  axiosInstance.post(\"/user/change-password\", { password, newPassword });\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nimport { logUser } from \"redux/user/userUtils\";\r\nimport { loginSchema } from \"services/validation\";\r\n\r\nconst values = { Nickname: \"\", Password: \"\" };\r\n\r\nexport const SignIn = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      validationSchema={loginSchema}\r\n      onSubmit={({ Nickname, Password }) =>\r\n        dispatch(logUser(Nickname, Password))\r\n      }\r\n    >\r\n      <Form className=\"signup\">\r\n        <Toast text={\"Account Deleted\"} toastType={\"DELETE\"} />\r\n        <FormWrapper\r\n          title={\"Sign In\"}\r\n          action={\"LOGIN\"}\r\n          render={() =>\r\n            Object.keys(values).map((value) => (\r\n              <div key={value} className=\"form__input\">\r\n                <label htmlFor={value}>{value}</label>\r\n                <Field name={value} type={value} />\r\n                <ErrorMessage name={value}>\r\n                  {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            ))\r\n          }\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import * as actions from \"./userActions\";\r\n\r\nimport { signIn, signUp, deleteAccount, passwordChange } from \"services/User\";\r\nimport { enableToast } from \"redux/toast/toastActions\";\r\n\r\nexport const logUser = (name, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.login());\r\n    const response = await signIn(name, password);\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    await dispatch(actions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.loginFailure(error.response.data.errors[0].msg));\r\n    } else {\r\n      dispatch(actions.loginFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const registerUser = ({ Nickname, Password, Email }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(actions.login());\r\n    const response = await signUp(Nickname, Password, Email);\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    await dispatch(actions.loginSuccess(response));\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.loginFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.loginFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUser = () => async (dispatch) => {\r\n  try {\r\n    await deleteAccount();\r\n    dispatch(enableToast(\"DELETE\"));\r\n    dispatch(actions.logout());\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.changePasswordFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.changePasswordFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const changePassword = (password, newPassword) => async (dispatch) => {\r\n  try {\r\n    dispatch(actions.changePassword());\r\n    await passwordChange(password, newPassword);\r\n    dispatch(actions.changePasswordSuccess());\r\n    dispatch(enableToast(\"CHANGE\"));\r\n    dispatch(actions.clearErrors());\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(actions.changePasswordFailure(error.response.data.msg));\r\n    } else {\r\n      dispatch(actions.changePasswordFailure(\"Internal server error\"));\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\n\r\nimport { registerUser } from \"redux/user/userUtils\";\r\nimport { registrationSchema } from \"services/validation\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n  Email: \"\",\r\n  Password: \"\",\r\n  Repassword: \"\",\r\n};\r\n\r\nexport const SignUp = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      validationSchema={registrationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        dispatch(registerUser(values));\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      <Form className=\"signup\">\r\n        <FormWrapper\r\n          title={\"Create Account\"}\r\n          action={\"SUBMIT\"}\r\n          render={() =>\r\n            Object.keys(values).map((value) => (\r\n              <div key={value} className=\"form__input\">\r\n                <label htmlFor={value}>{value}</label>\r\n                <Field\r\n                  name={value}\r\n                  type={value === \"Repassword\" ? \"password\" : value}\r\n                />\r\n                <ErrorMessage name={value}>\r\n                  {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            ))\r\n          }\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { deleteUser } from \"redux/user/userUtils\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nconst Delete = ({ confirm, name, setOpen }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (confirm) dispatch(deleteUser());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [confirm]);\r\n\r\n  return (\r\n    <button className={name} onClick={() => setOpen(true)}>\r\n      DELETE\r\n    </button>\r\n  );\r\n};\r\n\r\nconst deleteWithConfirm = withConfirm(Delete);\r\nexport { deleteWithConfirm as Delete };\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\n\r\nimport { changePasswordSchema } from \"services/validation\";\r\nimport { changePassword } from \"redux/user/userUtils\";\r\n\r\nimport { Delete } from \"components/Delete\";\r\nimport { FormWrapper } from \"components/FormWrapper\";\r\nimport { Logout } from \"components/Logout\";\r\nimport { Toast } from \"components/Toast\";\r\n\r\nconst values = {\r\n  Password: \"\",\r\n  newPassword: \"\",\r\n  newPasswordConfirm: \"\",\r\n};\r\n\r\nexport const User = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"user-page\">\r\n      <Toast text={\"Password Changed\"} toastType={\"CHANGE\"} />\r\n      <Formik\r\n        initialValues={values}\r\n        validationSchema={changePasswordSchema}\r\n        onSubmit={({ Password, newPassword }, { resetForm }) => {\r\n          resetForm({});\r\n          dispatch(changePassword(Password, newPassword));\r\n        }}\r\n      >\r\n        <Form className=\"signup\">\r\n          <FormWrapper\r\n            title={\"Change Password\"}\r\n            action={\"CHANGE\"}\r\n            render={() =>\r\n              Object.keys(values).map((value) => (\r\n                <div key={value} className=\"form__input\">\r\n                  <label htmlFor={value}>\r\n                    {value === \"Password\"\r\n                      ? value\r\n                      : value === \"newPassword\"\r\n                      ? \"New Password\"\r\n                      : \"Confirm New Password\"}\r\n                  </label>\r\n                  <Field name={value} type=\"Password\" />\r\n                  <ErrorMessage name={value}>\r\n                    {(msg) => <div className=\"form__error\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              ))\r\n            }\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      <Delete name={\"delete\"} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = () => (\r\n  <thead>\r\n    <tr>\r\n      <th>Number</th>\r\n      <th>Date</th>\r\n      <th>Hours</th>\r\n      <th>Cancel</th>\r\n    </tr>\r\n  </thead>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Information = () => (\r\n  <tr>\r\n    <td className=\"empty\" colSpan=\"4\">\r\n      Booking list is empty.\r\n    </td>\r\n  </tr>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { withConfirm } from \"HOC/withConfirm\";\r\n\r\nimport { deleteUsersBooking } from \"redux/userBookings/userBookingsUtils\";\r\nimport { deleteSelectedSlot } from \"redux/admin/adminUtils\";\r\n\r\nconst Row = ({ confirm, data: { date, hours, _id }, number, setOpen }) => {\r\n  const { isAdmin } = useSelector((store) => store.user);\r\n  const userId = useSelector((store) => store.admin.user._id);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin && confirm) dispatch(deleteUsersBooking(date, _id));\r\n  }, [_id, confirm, date, dispatch, id, isAdmin, userId]);\r\n\r\n  const deleteSlot = () =>\r\n    dispatch(deleteSelectedSlot(date, _id, isAdmin, userId));\r\n\r\n  return (\r\n    <tr>\r\n      <td>{number + 1}.</td>\r\n      <td>{date}</td>\r\n      <td>{hours}</td>\r\n      <td>\r\n        <button\r\n          className=\"cancel\"\r\n          onClick={() => (isAdmin ? deleteSlot() : setOpen(true))}\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst rowWithConfirm = withConfirm(Row);\r\nexport { rowWithConfirm as Row };\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { withError } from \"HOC/withError\";\r\nimport { Information } from \"./Information\";\r\nimport { Row } from \".//Row\";\r\n\r\nconst UserTable = ({ bookings }) => (\r\n  <table>\r\n    <Header />\r\n    <tbody>\r\n      {bookings.length ? (\r\n        bookings.map((slot, index) => (\r\n          <Row key={index} data={slot} number={index} />\r\n        ))\r\n      ) : (\r\n        <Information />\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nconst userTableWithError = withError(UserTable);\r\nexport { userTableWithError as UserTable };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUsersBookings } from \"redux/userBookings/userBookingsUtils\";\r\n\r\nimport { Logout } from \"components/Logout\";\r\nimport { UserTable } from \"components/UserTable\";\r\n\r\nexport const UserBookings = () => {\r\n  const { error, loading, userBookings } = useSelector(\r\n    (state) => state.userBookings\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersBookings());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"user-bookings\">\r\n      <UserTable bookings={userBookings} error={error} loading={loading} />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUser, getUserBookings } from \"redux/admin/adminUtils\";\r\nimport { UserTable } from \"components/UserTable\";\r\nimport { Toast } from \"components/Toast\";\r\nimport { BackArrow } from \"components/BackArrow\";\r\n\r\nexport const UserDetails = () => {\r\n  const { name, email, date } = useSelector(({ admin }) => admin.user);\r\n  const { userBookings } = useSelector(({ admin }) => admin);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser(id));\r\n    dispatch(getUserBookings(id));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"user-details\">\r\n      <BackArrow />\r\n      <h2>User Details</h2>\r\n      <div className=\"user-details__info\">\r\n        <p>\r\n          <span>Nickname:</span> {name}\r\n        </p>\r\n        <p>\r\n          <span>Email:</span> {email}\r\n        </p>\r\n        <p>\r\n          <span>Joining date:</span> {date ? date.slice(0, 10) : null}\r\n        </p>\r\n      </div>\r\n      <h3>User Bookings</h3>\r\n      {userBookings && <UserTable bookings={userBookings} />}\r\n      <Toast text={\"Slot deleted\"} toastType=\"DELETE\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = () => (\r\n  <thead>\r\n    <tr>\r\n      <th>Username</th>\r\n      <th colSpan=\"3\">Actions</th>\r\n    </tr>\r\n  </thead>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Information = () => (\r\n  <tr>\r\n    <td className=\"empty\" colSpan=\"2\">\r\n      Nothing found. Try to search other term.\r\n    </td>\r\n  </tr>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { handleBlockStatus } from \"redux/admin/adminUtils\";\r\n\r\nexport const Row = ({ name, id, isBlocked }) => {\r\n  const [block, setBlock] = useState(isBlocked);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>\r\n        <Link to={`/admin/user/${id}`}>\r\n          <button>Details</button>\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        <Link to={`/admin/user/password/${id}`}>\r\n          <button>Password</button>\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(handleBlockStatus(id, block));\r\n            setBlock(!block);\r\n          }}\r\n        >\r\n          {block ? \"Unblock\" : \"Block\"}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button onClick={() => alert(\"Functionality disabled\")}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Information } from \"./Information\";\r\nimport { Row } from \"./Row\";\r\n\r\nexport const UsersTable = ({ users }) => (\r\n  <table>\r\n    <Header />\r\n    <tbody>\r\n      {users.length ? (\r\n        users.map(({ ...props }, index) => <Row key={index} {...props} />)\r\n      ) : (\r\n        <Information />\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getUsers } from \"redux/admin/adminUtils\";\r\n\r\nconst values = {\r\n  Nickname: \"\",\r\n};\r\n\r\nexport const UserSearch = ({ name }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={values}\r\n      onSubmit={({ Nickname }) => {\r\n        dispatch(getUsers(Nickname));\r\n      }}\r\n    >\r\n      <Form className={name}>\r\n        <Field name={\"Nickname\"} type=\"text\" placeholder={\"User Nickname\"} />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { getPages } from \"./utils\";\r\n\r\nexport const Pagination = ({ currentPage, setCurrentPage, pages }) => (\r\n  <div className=\"pagination\">\r\n    {getPages([...Array(pages).keys()], currentPage).map((number, index) => (\r\n      <p\r\n        className={number === currentPage ? \"active\" : \"\"}\r\n        onClick={() => setCurrentPage(number)}\r\n        key={index}\r\n      >\r\n        {number + 1}\r\n      </p>\r\n    ))}\r\n  </div>\r\n);\r\n","export const getPages = (array, currentPage) => {\r\n  const [indexDown, indexUp] =\r\n    currentPage <= 3\r\n      ? [0, 5]\r\n      : currentPage > 3 && currentPage < array.length - 4\r\n      ? [currentPage - 2, currentPage + 3]\r\n      : [array.length - 5, array.length];\r\n\r\n  return array.slice(indexDown, indexUp);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Logout } from \"components/Logout\";\r\nimport { UsersTable } from \"components/adminComponents/UsersTable\";\r\nimport { UserSearch } from \"components/adminComponents/UserSearch\";\r\nimport { Pagination } from \"components/Pagination\";\r\n\r\nexport const UsersSearch = () => {\r\n  const [pages, setPages] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [usersToDisplay, setUsersToDisplay] = useState([]);\r\n  const users = useSelector((store) => store.admin.users);\r\n  const ROWS_ON_PAGE = 10;\r\n\r\n  useEffect(() => {\r\n    if (users) {\r\n      setPages(Math.ceil(users.length / ROWS_ON_PAGE));\r\n      const companieSlice = users.slice(\r\n        currentPage * ROWS_ON_PAGE,\r\n        currentPage * ROWS_ON_PAGE + ROWS_ON_PAGE\r\n      );\r\n      setUsersToDisplay(companieSlice);\r\n    }\r\n  }, [users, currentPage]);\r\n\r\n  return (\r\n    <div className=\"users-search\">\r\n      <UserSearch name={\"users-search__input\"} />\r\n      <UsersTable users={usersToDisplay} />\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        pages={pages}\r\n      />\r\n      <Logout />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\n\r\nimport { Route } from \"components/Route\";\r\n\r\nimport { Bookings } from \"pages/Admin/Bookings\";\r\nimport { Password } from \"pages/Admin/Password\";\r\nimport { BookingBoard } from \"pages/BookingBoard\";\r\nimport { Home } from \"pages/Home\";\r\nimport { SignIn } from \"pages/SignIn\";\r\nimport { SignUp } from \"pages/SignUp\";\r\nimport { User } from \"pages/User\";\r\nimport { UserBookings } from \"pages/UserBookings\";\r\nimport { UserDetails } from \"pages/Admin/UserDetails\";\r\nimport { UsersSearch } from \"pages/Admin/UsersSearch\";\r\n\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/admin\" component={Bookings} secured />\r\n    <Route exact path=\"/admin/search\" component={UsersSearch} secured />\r\n    <Route exact path=\"/admin/user/:id\" component={UserDetails} secured />\r\n    <Route exact path=\"/admin/user/password/:id\" component={Password} secured />\r\n    <Route path=\"/booking-board\" component={BookingBoard} secured />\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sign-in\" component={SignIn} />\r\n    <Route path=\"/sign-up\" component={SignUp} />\r\n    x`\r\n    <Route path=\"/user\" component={User} secured />\r\n    <Route path=\"/user-bookings\" component={UserBookings} secured />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"./css/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport store from \"redux/store\";\r\n\r\nimport { NavBar } from \"components/NavBar\";\r\nimport { Routes } from \"components/Routes\";\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <Router basename={\"laundry-front\"}>\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <Routes />\r\n        <ToastContainer autoClose={2000} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n);\r\n"],"sourceRoot":""}